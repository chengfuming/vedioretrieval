!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
AdIndexWorkInterface	ad_index_work_interface.cpp	/^DYN_WORK(AdIndexWorkInterface);$/;"	v
AdIndexWorkInterface	ad_index_work_interface.h	/^		AdIndexWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:AdIndexWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
AdIndexWorkInterface	ad_index_work_interface.h	/^class AdIndexWorkInterface : public WorkInterface{$/;"	c	inherits:WorkInterface
AdIndexWorkInterface::AdIndexWorkInterface	ad_index_work_interface.h	/^		AdIndexWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:AdIndexWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
AdIndexWorkInterface::find_indexes	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::find_indexes(const char* db_name, json_object* req_json, $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, json_object* req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::find_indexes	ad_index_work_interface.h	/^		int find_indexes(const char* db_name, json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::get_ad_db_interface	ad_index_work_interface.cpp	/^GlobalAdDbInterface* AdIndexWorkInterface::get_ad_db_interface(const char* db_name){$/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name)
AdIndexWorkInterface::get_ad_db_interface	ad_index_work_interface.h	/^		GlobalAdDbInterface* get_ad_db_interface(const char* db_name);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name)
AdIndexWorkInterface::get_attrs	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::get_attrs(const char* db_name, uint64_t ad_id, const char* item_keys[], $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, uint64_t ad_id, const char* item_keys[], size_t item_key_num, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::get_attrs	ad_index_work_interface.h	/^		int get_attrs(const char* db_name, uint64_t ad_id, const char* item_keys[], size_t item_key_len,$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, uint64_t ad_id, const char* item_keys[], size_t item_key_len, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::get_indexes	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::get_indexes(const char* db_name, uint64_t ad_id, const char* item_keys[], $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, uint64_t ad_id, const char* item_keys[], size_t item_key_num, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::get_indexes	ad_index_work_interface.h	/^		int get_indexes(const char* db_name, uint64_t ad_id, const char* item_key[], size_t item_key_len,$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, uint64_t ad_id, const char* item_key[], size_t item_key_len, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::get_status	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::get_status(const char* db_name, uint64_t ad_id, $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, uint64_t ad_id, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::get_status	ad_index_work_interface.h	/^		int get_status(const char* db_name, uint64_t ad_id, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, uint64_t ad_id, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::info	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::info(const char* db_name, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::info	ad_index_work_interface.h	/^		int info(const char* db_name, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::set	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::set(const char* db_name, json_object *req_json, char* &p_out_string, $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::set	ad_index_work_interface.h	/^		int set(const char* db_name, json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::set_status	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::set_status(const char* db_name, uint64_t ad_id, int ad_status, $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, uint64_t ad_id, int ad_status, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::set_status	ad_index_work_interface.h	/^		int set_status(const char* db_name, uint64_t ad_id, int status, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, uint64_t ad_id, int status, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::work_core	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::work_core(json_object *req_json, char* &p_out_string, $/;"	f	class:AdIndexWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::work_core	ad_index_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
AdIndexWorkInterface::~AdIndexWorkInterface	ad_index_work_interface.h	/^		~AdIndexWorkInterface(){$/;"	f	class:AdIndexWorkInterface	access:public	signature:()
BRIDGE_NUM	recentlygz_work_interface.h	/^const uint16_t BRIDGE_NUM = 2;					\/\/ 仅返回桥梁数目>=2的用户$/;"	v
BlockCacheWorkInterface	block_cache_work_interface.cpp	/^DYN_WORK(BlockCacheWorkInterface);$/;"	v
BlockCacheWorkInterface	block_cache_work_interface.h	/^		BlockCacheWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:BlockCacheWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
BlockCacheWorkInterface	block_cache_work_interface.h	/^class BlockCacheWorkInterface : public UserWorkInterface{$/;"	c	inherits:UserWorkInterface
BlockCacheWorkInterface::BlockCacheWorkInterface	block_cache_work_interface.h	/^		BlockCacheWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:BlockCacheWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
BlockCacheWorkInterface::get_block	block_cache_work_interface.cpp	/^int BlockCacheWorkInterface::get_block(const char* uid_str, char* &p_out_string, $/;"	f	class:BlockCacheWorkInterface	signature:(const char* uid_str, char* &p_out_string, int& n_out_len, const char* from_str, int write_flag)
BlockCacheWorkInterface::get_block	block_cache_work_interface.h	/^		int get_block(const char* uid_str, char* &p_out_string, int& n_out_len, $/;"	p	class:BlockCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_out_string, int& n_out_len, const char* from_str, int write_flag = 1)
BlockCacheWorkInterface::get_block_from_db	block_cache_work_interface.cpp	/^int BlockCacheWorkInterface::get_block_from_db(const char* uid_str, char* &p_result, const char* db_name){$/;"	f	class:BlockCacheWorkInterface	signature:(const char* uid_str, char* &p_result, const char* db_name)
BlockCacheWorkInterface::get_block_from_db	block_cache_work_interface.h	/^		int get_block_from_db(const char* uid_str, char* &p_result, const char* db_name);$/;"	p	class:BlockCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_result, const char* db_name)
BlockCacheWorkInterface::set_block_cache	block_cache_work_interface.cpp	/^int BlockCacheWorkInterface::set_block_cache(const char* uid_str, char* &p_result){$/;"	f	class:BlockCacheWorkInterface	signature:(const char* uid_str, char* &p_result)
BlockCacheWorkInterface::set_block_cache	block_cache_work_interface.h	/^		int set_block_cache(const char* uid_str, char* &p_result);$/;"	p	class:BlockCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_result)
BlockCacheWorkInterface::work_core	block_cache_work_interface.cpp	/^int BlockCacheWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:BlockCacheWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
BlockCacheWorkInterface::work_core	block_cache_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:BlockCacheWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
BlockCacheWorkInterface::~BlockCacheWorkInterface	block_cache_work_interface.h	/^		~BlockCacheWorkInterface(){$/;"	f	class:BlockCacheWorkInterface	access:public	signature:()
BridgeStr	recentlygz_work_interface.h	/^			BridgeStr(uint64_t uid, uint64_t time){	$/;"	f	struct:RecentlyGZWorkInterface::BridgeStr	access:public	signature:(uint64_t uid, uint64_t time)
BridgeStr	recentlygz_work_interface.h	/^		struct BridgeStr{$/;"	s	class:RecentlyGZWorkInterface	access:private
CAND_NUM	trenduser_rpm_work_interface.h	37;"	d
CAND_NUM	userrecom_work_interface.h	39;"	d
CONFIDENT_NUM	trenduser_rpm_work_interface.h	36;"	d
CONFIDENT_NUM	userrecom_work_interface.h	38;"	d
ExampleWorkInterface	example_work_interface.cpp	/^DYN_WORK(ExampleWorkInterface);$/;"	v
ExampleWorkInterface	example_work_interface.h	/^		ExampleWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:ExampleWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
ExampleWorkInterface	example_work_interface.h	/^class ExampleWorkInterface : public WorkInterface{$/;"	c	inherits:WorkInterface
ExampleWorkInterface::ExampleWorkInterface	example_work_interface.h	/^		ExampleWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:ExampleWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
ExampleWorkInterface::work_core	example_work_interface.cpp	/^int ExampleWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:ExampleWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
ExampleWorkInterface::work_core	example_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:ExampleWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
ExampleWorkInterface::~ExampleWorkInterface	example_work_interface.h	/^		~ExampleWorkInterface(){$/;"	f	class:ExampleWorkInterface	access:public	signature:()
FilterCacheWorkInterface	filter_cache_work_interface.cpp	/^DYN_WORK(FilterCacheWorkInterface);$/;"	v
FilterCacheWorkInterface	filter_cache_work_interface.h	/^		FilterCacheWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:FilterCacheWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
FilterCacheWorkInterface	filter_cache_work_interface.h	/^class FilterCacheWorkInterface : public UserWorkInterface{$/;"	c	inherits:UserWorkInterface
FilterCacheWorkInterface::FilterCacheWorkInterface	filter_cache_work_interface.h	/^		FilterCacheWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:FilterCacheWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
FilterCacheWorkInterface::get_filter	filter_cache_work_interface.cpp	/^int FilterCacheWorkInterface::get_filter(const char* uid_str, char* &p_out_string, $/;"	f	class:FilterCacheWorkInterface	signature:(const char* uid_str, char* &p_out_string, int& n_out_len, const char* from_str, int write_flag)
FilterCacheWorkInterface::get_filter	filter_cache_work_interface.h	/^		int get_filter(const char* uid_str, char* &p_out_string, int& n_out_len, $/;"	p	class:FilterCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_out_string, int& n_out_len, const char* from_str, int write_flag = 1)
FilterCacheWorkInterface::get_filter_from_db	filter_cache_work_interface.cpp	/^int FilterCacheWorkInterface::get_filter_from_db(const char* uid_str, char* &p_result, const char* db_name){$/;"	f	class:FilterCacheWorkInterface	signature:(const char* uid_str, char* &p_result, const char* db_name)
FilterCacheWorkInterface::get_filter_from_db	filter_cache_work_interface.h	/^		int get_filter_from_db(const char* uid_str, char* &p_result, const char* db_name);$/;"	p	class:FilterCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_result, const char* db_name)
FilterCacheWorkInterface::set_filter_cache	filter_cache_work_interface.cpp	/^int FilterCacheWorkInterface::set_filter_cache(const char* uid_str, char* &p_result){$/;"	f	class:FilterCacheWorkInterface	signature:(const char* uid_str, char* &p_result)
FilterCacheWorkInterface::set_filter_cache	filter_cache_work_interface.h	/^		int set_filter_cache(const char* uid_str, char* &p_result);$/;"	p	class:FilterCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_result)
FilterCacheWorkInterface::work_core	filter_cache_work_interface.cpp	/^int FilterCacheWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:FilterCacheWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
FilterCacheWorkInterface::work_core	filter_cache_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:FilterCacheWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
FilterCacheWorkInterface::~FilterCacheWorkInterface	filter_cache_work_interface.h	/^		~FilterCacheWorkInterface(){$/;"	f	class:FilterCacheWorkInterface	access:public	signature:()
FilterUserWorkInterface	filter_user_work_interface.cpp	/^DYN_WORK(FilterUserWorkInterface);$/;"	v
FilterUserWorkInterface	filter_user_work_interface.h	/^		FilterUserWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:FilterUserWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
FilterUserWorkInterface	filter_user_work_interface.h	/^class FilterUserWorkInterface : public UserWorkInterface{$/;"	c	inherits:UserWorkInterface
FilterUserWorkInterface::FilterUserWorkInterface	filter_user_work_interface.h	/^		FilterUserWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:FilterUserWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
FilterUserWorkInterface::work_core	filter_user_work_interface.cpp	/^int FilterUserWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:FilterUserWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
FilterUserWorkInterface::work_core	filter_user_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:FilterUserWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
FilterUserWorkInterface::~FilterUserWorkInterface	filter_user_work_interface.h	/^		~FilterUserWorkInterface(){$/;"	f	class:FilterUserWorkInterface	access:public	signature:()
GZ_NUM	recentlygz_work_interface.h	/^const uint16_t GZ_NUM = 10;						\/\/ 保留的关注信息数量$/;"	v
HashMapGZResult	recentlygz_work_interface.h	/^		typedef __gnu_cxx::hash_map<uint64_t, BridgeStr*> HashMapGZResult;$/;"	t	class:RecentlyGZWorkInterface	access:private
INFO_PART	recentlygz_work_interface.h	/^const uint16_t INFO_PART = 4;					\/\/ 每条关注信息包含四部分$/;"	v
IntersectionWorkInterface	intersection_work_interface.cpp	/^DYN_WORK(IntersectionWorkInterface);$/;"	v
IntersectionWorkInterface	intersection_work_interface.h	/^		IntersectionWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:IntersectionWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
IntersectionWorkInterface	intersection_work_interface.h	/^class IntersectionWorkInterface : public WorkInterface{$/;"	c	inherits:WorkInterface
IntersectionWorkInterface::IntersectionWorkInterface	intersection_work_interface.h	/^		IntersectionWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:IntersectionWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
IntersectionWorkInterface::generate_output_str	intersection_work_interface.cpp	/^void IntersectionWorkInterface::generate_output_str(const vector<uint64_t>& vec1, const vector<uint64_t>& vec2, $/;"	f	class:IntersectionWorkInterface	signature:(const vector<uint64_t>& vec1, const vector<uint64_t>& vec2, const int type, char*& p_out_string, int& n_len)
IntersectionWorkInterface::generate_output_str	intersection_work_interface.cpp	/^void IntersectionWorkInterface::generate_output_str(const vector<uint64_t>& vec_allfol, $/;"	f	class:IntersectionWorkInterface	signature:(const vector<uint64_t>& vec_allfol, const vector<uint64_t>& vec_result, const vector<uint64_t>& vec_good, const int type, char*& p_out_string, int& n_len)
IntersectionWorkInterface::generate_output_str	intersection_work_interface.cpp	/^void IntersectionWorkInterface::generate_output_str(const vector<uint64_t>& vec_result, const int type, $/;"	f	class:IntersectionWorkInterface	signature:(const vector<uint64_t>& vec_result, const int type, char*& p_out_string, int& n_len)
IntersectionWorkInterface::generate_output_str	intersection_work_interface.h	/^		void generate_output_str(const vector<uint64_t>& vec1, const vector<uint64_t>& vec2, const int type, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const vector<uint64_t>& vec1, const vector<uint64_t>& vec2, const int type, char*& p_out_string, int& n_len)
IntersectionWorkInterface::generate_output_str	intersection_work_interface.h	/^		void generate_output_str(const vector<uint64_t>& vec_allfol, const vector<uint64_t>& vec_result,$/;"	p	class:IntersectionWorkInterface	access:private	signature:(const vector<uint64_t>& vec_allfol, const vector<uint64_t>& vec_result, const vector<uint64_t>& vec_good, const int type, char*& p_out_string, int& n_len)
IntersectionWorkInterface::generate_output_str	intersection_work_interface.h	/^		void generate_output_str(const vector<uint64_t>& vec_result, const int type, char*& p_out_string, int& n_len);$/;"	p	class:IntersectionWorkInterface	access:private	signature:(const vector<uint64_t>& vec_result, const int type, char*& p_out_string, int& n_len)
IntersectionWorkInterface::get_follow_uids	intersection_work_interface.cpp	/^int IntersectionWorkInterface::get_follow_uids(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	f	class:IntersectionWorkInterface	signature:(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
IntersectionWorkInterface::get_follow_uids	intersection_work_interface.h	/^		int get_follow_uids(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
IntersectionWorkInterface::get_follow_uids_bak	intersection_work_interface.cpp	/^int IntersectionWorkInterface::get_follow_uids_bak(const char* uid_str, $/;"	f	class:IntersectionWorkInterface	signature:(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
IntersectionWorkInterface::get_follow_uids_bak	intersection_work_interface.h	/^		int get_follow_uids_bak(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
IntersectionWorkInterface::get_intersection_uids	intersection_work_interface.cpp	/^int IntersectionWorkInterface::get_intersection_uids(const char* uid_str, const int type, char*& p_out_string, $/;"	f	class:IntersectionWorkInterface	signature:(const char* uid_str, const int type, char*& p_out_string, int& n_out_len)
IntersectionWorkInterface::get_intersection_uids	intersection_work_interface.h	/^		int get_intersection_uids(const char* uid_str, const int type, char*& p_out_string, int& n_out_len);$/;"	p	class:IntersectionWorkInterface	access:private	signature:(const char* uid_str, const int type, char*& p_out_string, int& n_out_len)
IntersectionWorkInterface::get_intime_uids	intersection_work_interface.cpp	/^int IntersectionWorkInterface::get_intime_uids(const char* uid_str, const __gnu_cxx::hash_set<uint64_t>& reco_uids, $/;"	f	class:IntersectionWorkInterface	signature:(const char* uid_str, const __gnu_cxx::hash_set<uint64_t>& reco_uids, char*& p_out_string, int& n_out_len)
IntersectionWorkInterface::get_intime_uids	intersection_work_interface.h	/^		int get_intime_uids(const char* uid_str, const __gnu_cxx::hash_set<uint64_t>& reco_uids, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const char* uid_str, const __gnu_cxx::hash_set<uint64_t>& reco_uids, char*& p_out_string, int& n_out_len)
IntersectionWorkInterface::hashset_to_vector	intersection_work_interface.cpp	/^void IntersectionWorkInterface::hashset_to_vector(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	f	class:IntersectionWorkInterface	signature:(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, vector<uint64_t>& vec_follows)
IntersectionWorkInterface::hashset_to_vector	intersection_work_interface.h	/^		void hashset_to_vector(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, vector<uint64_t>& vec_follows)
IntersectionWorkInterface::intersection_uids	intersection_work_interface.cpp	/^int IntersectionWorkInterface::intersection_uids(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	f	class:IntersectionWorkInterface	signature:(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, const char* db_name, vector<uint64_t>& vec_intersection)
IntersectionWorkInterface::intersection_uids	intersection_work_interface.h	/^		int intersection_uids(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, const char* db_name, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, const char* db_name, vector<uint64_t>& vec_intersection)
IntersectionWorkInterface::vector_to_str	intersection_work_interface.cpp	/^int IntersectionWorkInterface::vector_to_str(const vector<uint64_t>& vec, const int type, char*& out_str){$/;"	f	class:IntersectionWorkInterface	signature:(const vector<uint64_t>& vec, const int type, char*& out_str)
IntersectionWorkInterface::vector_to_str	intersection_work_interface.h	/^		int vector_to_str(const vector<uint64_t>& vec, const int type, char*& out_str);$/;"	p	class:IntersectionWorkInterface	access:private	signature:(const vector<uint64_t>& vec, const int type, char*& out_str)
IntersectionWorkInterface::work_core	intersection_work_interface.cpp	/^int IntersectionWorkInterface::work_core(json_object *req_json, char* &p_out_string, $/;"	f	class:IntersectionWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
IntersectionWorkInterface::work_core	intersection_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:IntersectionWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
IntersectionWorkInterface::~IntersectionWorkInterface	intersection_work_interface.h	/^		~IntersectionWorkInterface(){$/;"	f	class:IntersectionWorkInterface	access:public	signature:()
IsGoodUser	p2p_work_interface.cpp	/^bool P2PWorkInterface::IsGoodUser(const uint64_t uid){$/;"	f	class:P2PWorkInterface	signature:(const uint64_t uid)
IsGoodUser	p2p_work_interface.h	/^		bool IsGoodUser(const uint64_t uid);$/;"	p	class:P2PWorkInterface	access:private	signature:(const uint64_t uid)
Is_Gray	userrecom_work_interface.h	/^		static bool Is_Gray(const uint64_t request_id){$/;"	f	class:UserRecomWorkInterface	access:public	signature:(const uint64_t request_id)
MAP_VEC_UID	targeting_work_interface.h	/^	typedef std::map<uint64_t, VEC_UID> MAP_VEC_UID;$/;"	t	class:TargetingWorkInterface	access:public
MAX_BRIDGE_NUM	trenduser_rpm_work_interface.h	/^	static const int MAX_BRIDGE_NUM = 3;$/;"	m	class:TrendUserRPMWorkInterface	access:public
MAX_FOLLOW_NUM	user_follow_proxy_work_interface.h	20;"	d
MAX_FOLLOW_SIZE	targeting_work_interface.h	33;"	d
MAX_GZ_LENGTH	recentlygz_work_interface.h	/^const uint16_t MAX_GZ_LENGTH = 50;				\/\/ 每条关注信息字符串长度$/;"	v
MAX_GZ_NUM	recentlygz_work_interface.h	/^const int MAX_GZ_NUM = 5000;                    \/\/ 每个用户的最大关注数目$/;"	v
MAX_LIMIT	targeting_work_interface.h	34;"	d
MAX_RESULT_NUM	recentlygz_work_interface.h	/^const int MAX_RESULT_NUM = 100;					\/\/ 返回结果的最大数目$/;"	v
NodeUserRecomWorkInterface	node_userrecom_work_interface.cpp	/^DYN_WORK(NodeUserRecomWorkInterface);$/;"	v
NodeUserRecomWorkInterface	node_userrecom_work_interface.h	/^		NodeUserRecomWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:NodeUserRecomWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
NodeUserRecomWorkInterface	node_userrecom_work_interface.h	/^class NodeUserRecomWorkInterface : public UserWorkInterface{$/;"	c	inherits:UserWorkInterface
NodeUserRecomWorkInterface::NodeUserRecomWorkInterface	node_userrecom_work_interface.h	/^		NodeUserRecomWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:NodeUserRecomWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
NodeUserRecomWorkInterface::generate_out_str	node_userrecom_work_interface.h	/^		int generate_out_str(int num, const candidate_item_t& cand,$/;"	p	class:NodeUserRecomWorkInterface	access:private	signature:(int num, const candidate_item_t& cand, uint32_t user_type, int& index, char*& p_out_temp, int& n_len)
NodeUserRecomWorkInterface::get_reco_uids	node_userrecom_work_interface.cpp	/^int NodeUserRecomWorkInterface::get_reco_uids(const char* uid_str, uint64_t node_uids[], $/;"	f	class:NodeUserRecomWorkInterface	signature:(const char* uid_str, uint64_t node_uids[], uint32_t node_uids_num, uint32_t num, char* p_out_string, int& n_out_len)
NodeUserRecomWorkInterface::get_reco_uids	node_userrecom_work_interface.h	/^		int get_reco_uids(const char* uid_str, uint64_t node_uids[], uint32_t node_uids_num,$/;"	p	class:NodeUserRecomWorkInterface	access:private	signature:(const char* uid_str, uint64_t node_uids[], uint32_t node_uids_num, uint32_t num, char* p_out_string, int& n_out_len)
NodeUserRecomWorkInterface::work_core	node_userrecom_work_interface.cpp	/^int NodeUserRecomWorkInterface::work_core(json_object *req_json, char* &p_out_string, $/;"	f	class:NodeUserRecomWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
NodeUserRecomWorkInterface::work_core	node_userrecom_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:NodeUserRecomWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
NodeUserRecomWorkInterface::~NodeUserRecomWorkInterface	node_userrecom_work_interface.h	/^		~NodeUserRecomWorkInterface(){$/;"	f	class:NodeUserRecomWorkInterface	access:public	signature:()
OFFLINE_CONF_NUM	userrecom_work_interface.h	37;"	d
OFF_LIMIT_LEN	trenduser_rpm_work_interface.h	35;"	d
OFF_LIMIT_LEN	userrecom_work_interface.h	36;"	d
P2PWorkInterface	p2p_work_interface.cpp	/^DYN_WORK(P2PWorkInterface);$/;"	v
P2PWorkInterface	p2p_work_interface.h	/^		P2PWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:P2PWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
P2PWorkInterface	p2p_work_interface.h	/^class P2PWorkInterface : public UserWorkInterface {$/;"	c	inherits:UserWorkInterface
P2PWorkInterface::IsGoodUser	p2p_work_interface.cpp	/^bool P2PWorkInterface::IsGoodUser(const uint64_t uid){$/;"	f	class:P2PWorkInterface	signature:(const uint64_t uid)
P2PWorkInterface::IsGoodUser	p2p_work_interface.h	/^		bool IsGoodUser(const uint64_t uid);$/;"	p	class:P2PWorkInterface	access:private	signature:(const uint64_t uid)
P2PWorkInterface::P2PWorkInterface	p2p_work_interface.h	/^		P2PWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:P2PWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
P2PWorkInterface::generate_output_str	p2p_work_interface.cpp	/^void P2PWorkInterface::generate_output_str(const vector<RecoInfo>& result_vec, const int num, $/;"	f	class:P2PWorkInterface	signature:(const vector<RecoInfo>& result_vec, const int num, const uint64_t tuid, char*& p_out_string, int& n_out_len)
P2PWorkInterface::generate_output_str	p2p_work_interface.h	/^		void generate_output_str(const vector<RecoInfo>& result_vec, const int num,$/;"	p	class:P2PWorkInterface	access:private	signature:(const vector<RecoInfo>& result_vec, const int num, const uint64_t tuid, char*& p_out_string, int& n_out_len)
P2PWorkInterface::get_data_set	p2p_work_interface.cpp	/^int P2PWorkInterface::get_data_set(char* p_result, char split_char, char second_split_char, $/;"	f	class:P2PWorkInterface	signature:(char* p_result, char split_char, char second_split_char, __gnu_cxx::hash_set<uint64_t>& hashset_uids)
P2PWorkInterface::get_data_set	p2p_work_interface.h	/^		int get_data_set(char* p_result, char split_char, char second_split_char,$/;"	p	class:P2PWorkInterface	access:private	signature:(char* p_result, char split_char, char second_split_char, __gnu_cxx::hash_set<uint64_t>& hashset_uids)
P2PWorkInterface::get_fanssim_data	p2p_work_interface.cpp	/^void P2PWorkInterface::get_fanssim_data(const char*& str_input, const char sep_char, $/;"	f	class:P2PWorkInterface	signature:(const char*& str_input, const char sep_char, const char second_sep_char, vector<PAIR_INT_FLOAT>& vec_ids)
P2PWorkInterface::get_fanssim_data	p2p_work_interface.h	/^		void get_fanssim_data(const char*& str_input, const char sep_char, $/;"	p	class:P2PWorkInterface	access:private	signature:(const char*& str_input, const char sep_char, const char second_sep_char, vector<PAIR_INT_FLOAT>& vec_ids)
P2PWorkInterface::get_intimacy_data	p2p_work_interface.cpp	/^int P2PWorkInterface::get_intimacy_data(const uint64_t uid, vector<PAIR_INT_FLOAT>& vec_ids){$/;"	f	class:P2PWorkInterface	signature:(const uint64_t uid, vector<PAIR_INT_FLOAT>& vec_ids)
P2PWorkInterface::get_intimacy_data	p2p_work_interface.h	/^		int get_intimacy_data(const uint64_t uid, vector<PAIR_INT_FLOAT>& vec_ids);$/;"	p	class:P2PWorkInterface	access:private	signature:(const uint64_t uid, vector<PAIR_INT_FLOAT>& vec_ids)
P2PWorkInterface::get_recom_data	p2p_work_interface.cpp	/^int P2PWorkInterface::get_recom_data(const uint64_t uid, const bool need_relation, $/;"	f	class:P2PWorkInterface	signature:(const uint64_t uid, const bool need_relation, const __gnu_cxx::hash_set<uint64_t> filter_set, vector<RecoInfo>& result_vec)
P2PWorkInterface::get_recom_data	p2p_work_interface.h	/^		int get_recom_data(const uint64_t uid, const bool need_relation, $/;"	p	class:P2PWorkInterface	access:private	signature:(const uint64_t uid, const bool need_relation, const __gnu_cxx::hash_set<uint64_t> filter_set, vector<RecoInfo>& result_vec)
P2PWorkInterface::get_v_type	p2p_work_interface.cpp	/^int P2PWorkInterface::get_v_type(const uint64_t uid){	$/;"	f	class:P2PWorkInterface	signature:(const uint64_t uid)
P2PWorkInterface::get_v_type	p2p_work_interface.h	/^		int get_v_type(const uint64_t uid);$/;"	p	class:P2PWorkInterface	access:private	signature:(const uint64_t uid)
P2PWorkInterface::get_yellowV_data	p2p_work_interface.cpp	/^int P2PWorkInterface::get_yellowV_data(const char*& str_input, const char sep_char, $/;"	f	class:P2PWorkInterface	signature:(const char*& str_input, const char sep_char, const char second_sep_char, vector<PAIR_INT_FLOAT>& vec_ids)
P2PWorkInterface::get_yellowV_data	p2p_work_interface.h	/^		int get_yellowV_data(const char*& str_input, const char sep_char,$/;"	p	class:P2PWorkInterface	access:private	signature:(const char*& str_input, const char sep_char, const char second_sep_char, vector<PAIR_INT_FLOAT>& vec_ids)
P2PWorkInterface::p2p_recom	p2p_work_interface.cpp	/^int P2PWorkInterface::p2p_recom(const char* uid_str, const char* tuid_str, const int num,$/;"	f	class:P2PWorkInterface	signature:(const char* uid_str, const char* tuid_str, const int num, const bool need_relation, char*& p_out_string, int& n_out_len)
P2PWorkInterface::p2p_recom	p2p_work_interface.h	/^		int p2p_recom(const char* uid_str, const char* tuid_str, const int num,$/;"	p	class:P2PWorkInterface	access:private	signature:(const char* uid_str, const char* tuid_str, const int num, const bool need_relation, char*& p_out_string, int& n_out_len)
P2PWorkInterface::recom_intersection	p2p_work_interface.cpp	/^int P2PWorkInterface::recom_intersection(const int source, const bool rel_relation, $/;"	f	class:P2PWorkInterface	signature:(const int source, const bool rel_relation, const __gnu_cxx::hash_set<uint64_t>& filter_set, const map<uint64_t, int>& rel_map, const vector<PAIR_INT_FLOAT>& uid_sco_vec, vector<RecoInfo>& inter_vec)
P2PWorkInterface::recom_intersection	p2p_work_interface.h	/^		int recom_intersection(const int source, const bool rel_sorted, $/;"	p	class:P2PWorkInterface	access:private	signature:(const int source, const bool rel_sorted, const __gnu_cxx::hash_set<uint64_t>& filter_set, const map<uint64_t, int>& rel_map, const vector<PAIR_INT_FLOAT>& uid_sco_vec, vector<RecoInfo>& inter_vec)
P2PWorkInterface::work_core	p2p_work_interface.cpp	/^int P2PWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:P2PWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
P2PWorkInterface::work_core	p2p_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:P2PWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
P2PWorkInterface::~P2PWorkInterface	p2p_work_interface.h	/^		~P2PWorkInterface(){$/;"	f	class:P2PWorkInterface	access:public	signature:()
ParaUserRecomWorkInterface	para_userrecom_work_interface.cpp	/^DYN_WORK(ParaUserRecomWorkInterface);$/;"	v
ParaUserRecomWorkInterface	para_userrecom_work_interface.h	/^		ParaUserRecomWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:ParaUserRecomWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
ParaUserRecomWorkInterface	para_userrecom_work_interface.h	/^class ParaUserRecomWorkInterface : public UserWorkInterface{$/;"	c	inherits:UserWorkInterface
ParaUserRecomWorkInterface::ParaUserRecomWorkInterface	para_userrecom_work_interface.h	/^		ParaUserRecomWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:ParaUserRecomWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
ParaUserRecomWorkInterface::generate_out_str	para_userrecom_work_interface.h	/^		int generate_out_str(int num, const candidate_item_t& cand,$/;"	p	class:ParaUserRecomWorkInterface	access:private	signature:(int num, const candidate_item_t& cand, uint32_t user_type, int& index, char*& p_out_temp, int& n_len)
ParaUserRecomWorkInterface::get_reco_uids	para_userrecom_work_interface.cpp	/^int ParaUserRecomWorkInterface::get_reco_uids(const char* uid_str, uint32_t num, $/;"	f	class:ParaUserRecomWorkInterface	signature:(const char* uid_str, uint32_t num, uint32_t rel_num, char* p_out_string, int& n_out_len)
ParaUserRecomWorkInterface::get_reco_uids	para_userrecom_work_interface.h	/^		int get_reco_uids(const char* uid_str, uint32_t num, uint32_t rel_num, char* p_out_string, int& n_out_len);$/;"	p	class:ParaUserRecomWorkInterface	access:private	signature:(const char* uid_str, uint32_t num, uint32_t rel_num, char* p_out_string, int& n_out_len)
ParaUserRecomWorkInterface::work_core	para_userrecom_work_interface.cpp	/^int ParaUserRecomWorkInterface::work_core(json_object *req_json, char* &p_out_string, $/;"	f	class:ParaUserRecomWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
ParaUserRecomWorkInterface::work_core	para_userrecom_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:ParaUserRecomWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
ParaUserRecomWorkInterface::~ParaUserRecomWorkInterface	para_userrecom_work_interface.h	/^		~ParaUserRecomWorkInterface(){$/;"	f	class:ParaUserRecomWorkInterface	access:public	signature:()
REASON_NUM	trenduser_rpm_work_interface.h	/^	static const int REASON_NUM = 4;$/;"	m	class:TrendUserRPMWorkInterface	access:public
RELATION	p2p_work_interface.h	/^enum RELATION {RELATION_NO = 0, RELATION_FOLLOW = 1, RELATION_FRIEND = 2};$/;"	g
RELATION_FOLLOW	p2p_work_interface.h	/^enum RELATION {RELATION_NO = 0, RELATION_FOLLOW = 1, RELATION_FRIEND = 2};$/;"	e	enum:RELATION
RELATION_FRIEND	p2p_work_interface.h	/^enum RELATION {RELATION_NO = 0, RELATION_FOLLOW = 1, RELATION_FRIEND = 2};$/;"	e	enum:RELATION
RELATION_NO	p2p_work_interface.h	/^enum RELATION {RELATION_NO = 0, RELATION_FOLLOW = 1, RELATION_FRIEND = 2};$/;"	e	enum:RELATION
RESULT_NUM	p2p_work_interface.h	/^const int RESULT_NUM = 50;		\/\/ 默认结果数量$/;"	v
RecentlyGZWorkInterface	recentlygz_work_interface.cpp	/^DYN_WORK(RecentlyGZWorkInterface);$/;"	v
RecentlyGZWorkInterface	recentlygz_work_interface.h	/^		RecentlyGZWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:RecentlyGZWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
RecentlyGZWorkInterface	recentlygz_work_interface.h	/^class RecentlyGZWorkInterface : public WorkInterface{$/;"	c	inherits:WorkInterface
RecentlyGZWorkInterface::BridgeStr	recentlygz_work_interface.h	/^		struct BridgeStr{$/;"	s	class:RecentlyGZWorkInterface	access:private
RecentlyGZWorkInterface::BridgeStr::BridgeStr	recentlygz_work_interface.h	/^			BridgeStr(uint64_t uid, uint64_t time){	$/;"	f	struct:RecentlyGZWorkInterface::BridgeStr	access:public	signature:(uint64_t uid, uint64_t time)
RecentlyGZWorkInterface::BridgeStr::bridge_uid_vec	recentlygz_work_interface.h	/^			vector<uint64_t> bridge_uid_vec;	\/\/ 桥梁用户$/;"	m	struct:RecentlyGZWorkInterface::BridgeStr	access:public
RecentlyGZWorkInterface::BridgeStr::num_	recentlygz_work_interface.h	/^			uint16_t num_;                      \/\/ 桥梁数量$/;"	m	struct:RecentlyGZWorkInterface::BridgeStr	access:public
RecentlyGZWorkInterface::BridgeStr::time_	recentlygz_work_interface.h	/^			uint64_t time_;						\/\/ 桥梁加关注的时间，保存最近的时间$/;"	m	struct:RecentlyGZWorkInterface::BridgeStr	access:public
RecentlyGZWorkInterface::HashMapGZResult	recentlygz_work_interface.h	/^		typedef __gnu_cxx::hash_map<uint64_t, BridgeStr*> HashMapGZResult;$/;"	t	class:RecentlyGZWorkInterface	access:private
RecentlyGZWorkInterface::RecentlyGZWorkInterface	recentlygz_work_interface.h	/^		RecentlyGZWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:RecentlyGZWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
RecentlyGZWorkInterface::RecomInfo	recentlygz_work_interface.h	/^		struct RecomInfo{										\/\/ 推荐用户信息$/;"	s	class:RecentlyGZWorkInterface	access:private
RecentlyGZWorkInterface::RecomInfo::RecomInfo	recentlygz_work_interface.h	/^			RecomInfo(uint64_t reco_id, BridgeStr* bridgeInfo, uint32_t vtype){$/;"	f	struct:RecentlyGZWorkInterface::RecomInfo	access:public	signature:(uint64_t reco_id, BridgeStr* bridgeInfo, uint32_t vtype)
RecentlyGZWorkInterface::RecomInfo::bridgeInfo_	recentlygz_work_interface.h	/^			BridgeStr* bridgeInfo_;								\/\/ 推荐用户桥梁信息$/;"	m	struct:RecentlyGZWorkInterface::RecomInfo	access:public
RecentlyGZWorkInterface::RecomInfo::reco_id_	recentlygz_work_interface.h	/^			uint64_t reco_id_;									\/\/ 推荐用户id$/;"	m	struct:RecentlyGZWorkInterface::RecomInfo	access:public
RecentlyGZWorkInterface::RecomInfo::vtype_	recentlygz_work_interface.h	/^			uint32_t vtype_;									\/\/ 推荐用户类型$/;"	m	struct:RecentlyGZWorkInterface::RecomInfo	access:public
RecentlyGZWorkInterface::calc_recom_result	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::calc_recom_result(const __gnu_cxx::hash_set<uint64_t>& reco_ids, $/;"	f	class:RecentlyGZWorkInterface	signature:(const __gnu_cxx::hash_set<uint64_t>& reco_ids, const HashMapGZResult& reco_dict, const __gnu_cxx::hash_set<uint64_t>& gz_ids, vector<RecomInfo>& result_vec)
RecentlyGZWorkInterface::calc_recom_result	recentlygz_work_interface.h	/^		int calc_recom_result(const __gnu_cxx::hash_set<uint64_t>& reco_ids, const HashMapGZResult& reco_dict,$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const __gnu_cxx::hash_set<uint64_t>& reco_ids, const HashMapGZResult& reco_dict, const __gnu_cxx::hash_set<uint64_t>& gz_ids, vector<RecomInfo>& result_vec)
RecentlyGZWorkInterface::cmp_RecomInfo	recentlygz_work_interface.h	/^		static bool cmp_RecomInfo(const RecomInfo& a, const RecomInfo& b){$/;"	f	class:RecentlyGZWorkInterface	access:private	signature:(const RecomInfo& a, const RecomInfo& b)
RecentlyGZWorkInterface::construct_user_data	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::construct_user_data(const MapMResult& map_m_fof_result, const char split_char, $/;"	f	class:RecentlyGZWorkInterface	signature:(const MapMResult& map_m_fof_result, const char split_char, const char second_split_char, HashMapGZResult& gz_dict, __gnu_cxx::hash_set<uint64_t>& recoid_set)
RecentlyGZWorkInterface::construct_user_data	recentlygz_work_interface.h	/^		int construct_user_data(const MapMResult& map_m_fof_result, const char split_char, $/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const MapMResult& map_m_fof_result, const char split_char, const char second_split_char, HashMapGZResult& gz_dict, __gnu_cxx::hash_set<uint64_t>& recoid_set)
RecentlyGZWorkInterface::generate_output_str	recentlygz_work_interface.cpp	/^void RecentlyGZWorkInterface::generate_output_str(const vector<RecomInfo>& res_vec, char*& out_str, int& n_len){$/;"	f	class:RecentlyGZWorkInterface	signature:(const vector<RecomInfo>& res_vec, char*& out_str, int& n_len)
RecentlyGZWorkInterface::generate_output_str	recentlygz_work_interface.h	/^		void generate_output_str(const vector<RecomInfo>& res_vec, char*& out_str, int& n_len);$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const vector<RecomInfo>& res_vec, char*& out_str, int& n_len)
RecentlyGZWorkInterface::get_follow_uids	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::get_follow_uids(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	f	class:RecentlyGZWorkInterface	signature:(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
RecentlyGZWorkInterface::get_follow_uids	recentlygz_work_interface.h	/^		int get_follow_uids(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
RecentlyGZWorkInterface::get_intersection	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::get_intersection(const __gnu_cxx::hash_set<uint64_t>& src_set, $/;"	f	class:RecentlyGZWorkInterface	signature:(const __gnu_cxx::hash_set<uint64_t>& src_set, const char* db_name, bool cull, __gnu_cxx::hash_set<uint64_t>& des_set)
RecentlyGZWorkInterface::get_intersection	recentlygz_work_interface.h	/^		int get_intersection(const __gnu_cxx::hash_set<uint64_t>& src_set, const char* db_name, bool cull,$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const __gnu_cxx::hash_set<uint64_t>& src_set, const char* db_name, bool cull, __gnu_cxx::hash_set<uint64_t>& des_set)
RecentlyGZWorkInterface::get_recom_uids	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::get_recom_uids(const char* uid_str, char*& p_out_string, int& n_out_len){$/;"	f	class:RecentlyGZWorkInterface	signature:(const char* uid_str, char*& p_out_string, int& n_out_len)
RecentlyGZWorkInterface::get_recom_uids	recentlygz_work_interface.h	/^		int get_recom_uids(const char* uid_str, char*& p_out_string, int& n_out_len);$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const char* uid_str, char*& p_out_string, int& n_out_len)
RecentlyGZWorkInterface::get_v_type	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::get_v_type(const uint64_t uid, uint32_t& type){	$/;"	f	class:RecentlyGZWorkInterface	signature:(const uint64_t uid, uint32_t& type)
RecentlyGZWorkInterface::get_v_type	recentlygz_work_interface.h	/^		int get_v_type(const uint64_t uid, uint32_t& type);	$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const uint64_t uid, uint32_t& type)
RecentlyGZWorkInterface::mget_follow_uids	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::mget_follow_uids(const uint64_t uids[], const uint32_t get_uid_num, $/;"	f	class:RecentlyGZWorkInterface	signature:(const uint64_t uids[], const uint32_t get_uid_num, MapMResult& map_m_fof_result, char& split_char, char& second_split_char)
RecentlyGZWorkInterface::mget_follow_uids	recentlygz_work_interface.h	/^		int mget_follow_uids(const uint64_t uids[], const uint32_t get_uid_num, MapMResult& map_m_fof_result,$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const uint64_t uids[], const uint32_t get_uid_num, MapMResult& map_m_fof_result, char& split_char, char& second_split_char)
RecentlyGZWorkInterface::recomInfo_to_str	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::recomInfo_to_str(const RecomInfo& info, char*& out_str){$/;"	f	class:RecentlyGZWorkInterface	signature:(const RecomInfo& info, char*& out_str)
RecentlyGZWorkInterface::recomInfo_to_str	recentlygz_work_interface.h	/^		int recomInfo_to_str(const RecomInfo& info, char*& tmp_str);$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const RecomInfo& info, char*& tmp_str)
RecentlyGZWorkInterface::release_hashmap_gz_result	recentlygz_work_interface.h	/^		void release_hashmap_gz_result(HashMapGZResult& hashmap_gz_result){$/;"	f	class:RecentlyGZWorkInterface	access:private	signature:(HashMapGZResult& hashmap_gz_result)
RecentlyGZWorkInterface::split_string_to_array	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::split_string_to_array(const char* str_input, const char& sep, $/;"	f	class:RecentlyGZWorkInterface	signature:(const char* str_input, const char& sep, char str_out[][MAX_GZ_LENGTH])
RecentlyGZWorkInterface::split_string_to_array	recentlygz_work_interface.h	/^		int split_string_to_array(const char* str_input, const char& sep, char str_out[][MAX_GZ_LENGTH]);$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const char* str_input, const char& sep, char str_out[][MAX_GZ_LENGTH])
RecentlyGZWorkInterface::vector_to_str	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::vector_to_str(const vector<uint64_t>& vec, char*& out_str){$/;"	f	class:RecentlyGZWorkInterface	signature:(const vector<uint64_t>& vec, char*& out_str)
RecentlyGZWorkInterface::vector_to_str	recentlygz_work_interface.h	/^		int vector_to_str(const vector<uint64_t>& vec, char*& out_str);$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const vector<uint64_t>& vec, char*& out_str)
RecentlyGZWorkInterface::work_core	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:RecentlyGZWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
RecentlyGZWorkInterface::work_core	recentlygz_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:RecentlyGZWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
RecentlyGZWorkInterface::~RecentlyGZWorkInterface	recentlygz_work_interface.h	/^		~RecentlyGZWorkInterface(){$/;"	f	class:RecentlyGZWorkInterface	access:public	signature:()
RecoInfo	p2p_work_interface.h	/^struct RecoInfo{			\/\/ 推荐结果信息$/;"	s
RecoInfo::reco_id	p2p_work_interface.h	/^	uint64_t reco_id;		\/\/ 推荐结果id$/;"	m	struct:RecoInfo	access:public
RecoInfo::relation	p2p_work_interface.h	/^	int relation;			\/\/ 推荐结果与被访问者关系$/;"	m	struct:RecoInfo	access:public
RecoInfo::score	p2p_work_interface.h	/^	float score;			\/\/ 推荐结果得分$/;"	m	struct:RecoInfo	access:public
RecoInfo::source	p2p_work_interface.h	/^	int source;				\/\/ 数据来源$/;"	m	struct:RecoInfo	access:public
RecoInfo::user_type	p2p_work_interface.h	/^	int user_type;			\/\/ 用户V类型$/;"	m	struct:RecoInfo	access:public
RecomInfo	recentlygz_work_interface.h	/^			RecomInfo(uint64_t reco_id, BridgeStr* bridgeInfo, uint32_t vtype){$/;"	f	struct:RecentlyGZWorkInterface::RecomInfo	access:public	signature:(uint64_t reco_id, BridgeStr* bridgeInfo, uint32_t vtype)
RecomInfo	recentlygz_work_interface.h	/^		struct RecomInfo{										\/\/ 推荐用户信息$/;"	s	class:RecentlyGZWorkInterface	access:private
RpmModelWorkInterface	rpmmodel_work_interface.cpp	/^DYN_WORK(RpmModelWorkInterface);$/;"	v
RpmModelWorkInterface	rpmmodel_work_interface.h	/^		RpmModelWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:RpmModelWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
RpmModelWorkInterface	rpmmodel_work_interface.h	/^class RpmModelWorkInterface : public WorkInterface{$/;"	c	inherits:WorkInterface
RpmModelWorkInterface::RpmModelWorkInterface	rpmmodel_work_interface.h	/^		RpmModelWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:RpmModelWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
RpmModelWorkInterface::work_core	rpmmodel_work_interface.cpp	/^int RpmModelWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:RpmModelWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
RpmModelWorkInterface::work_core	rpmmodel_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:RpmModelWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
RpmModelWorkInterface::~RpmModelWorkInterface	rpmmodel_work_interface.h	/^		~RpmModelWorkInterface(){$/;"	f	class:RpmModelWorkInterface	access:public	signature:()
SOURCE	p2p_work_interface.h	/^enum SOURCE {SOURCE_NOWHERE = 0, SOURCE_SEARCH = 1, SOURCE_FANSSIM = 2, SOURCE_INTIMACY = 3};$/;"	g
SOURCE_FANSSIM	p2p_work_interface.h	/^enum SOURCE {SOURCE_NOWHERE = 0, SOURCE_SEARCH = 1, SOURCE_FANSSIM = 2, SOURCE_INTIMACY = 3};$/;"	e	enum:SOURCE
SOURCE_INTIMACY	p2p_work_interface.h	/^enum SOURCE {SOURCE_NOWHERE = 0, SOURCE_SEARCH = 1, SOURCE_FANSSIM = 2, SOURCE_INTIMACY = 3};$/;"	e	enum:SOURCE
SOURCE_NOWHERE	p2p_work_interface.h	/^enum SOURCE {SOURCE_NOWHERE = 0, SOURCE_SEARCH = 1, SOURCE_FANSSIM = 2, SOURCE_INTIMACY = 3};$/;"	e	enum:SOURCE
SOURCE_SEARCH	p2p_work_interface.h	/^enum SOURCE {SOURCE_NOWHERE = 0, SOURCE_SEARCH = 1, SOURCE_FANSSIM = 2, SOURCE_INTIMACY = 3};$/;"	e	enum:SOURCE
TIMESTAMP	recentlygz_work_interface.h	/^const uint64_t TIMESTAMP = (unsigned long long)(86400 * 7);	\/\/ 最多取七天前的关注$/;"	v
TargetingWorkInterface	targeting_work_interface.cpp	/^DYN_WORK(TargetingWorkInterface);$/;"	v
TargetingWorkInterface	targeting_work_interface.h	/^		TargetingWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:TargetingWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
TargetingWorkInterface	targeting_work_interface.h	/^class TargetingWorkInterface : public WorkInterface{$/;"	c	inherits:WorkInterface
TargetingWorkInterface::MAP_VEC_UID	targeting_work_interface.h	/^	typedef std::map<uint64_t, VEC_UID> MAP_VEC_UID;$/;"	t	class:TargetingWorkInterface	access:public
TargetingWorkInterface::TargetingWorkInterface	targeting_work_interface.h	/^		TargetingWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:TargetingWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
TargetingWorkInterface::VEC_UID	targeting_work_interface.h	/^	typedef std::vector<uint64_t> VEC_UID;$/;"	t	class:TargetingWorkInterface	access:public
TargetingWorkInterface::generate_output_str	targeting_work_interface.cpp	/^int TargetingWorkInterface::generate_output_str(const MAP_VEC_UID& map_vec_uid, int num, $/;"	f	class:TargetingWorkInterface	signature:(const MAP_VEC_UID& map_vec_uid, int num, char*& p_out_string, int& n_len)
TargetingWorkInterface::generate_output_str	targeting_work_interface.h	/^		int generate_output_str(const MAP_VEC_UID& map_vec_uid, int num, $/;"	p	class:TargetingWorkInterface	access:private	signature:(const MAP_VEC_UID& map_vec_uid, int num, char*& p_out_string, int& n_len)
TargetingWorkInterface::get_follow_uids	targeting_work_interface.cpp	/^int TargetingWorkInterface::get_follow_uids(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, $/;"	f	class:TargetingWorkInterface	signature:(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, uint64_t uid)
TargetingWorkInterface::get_follow_uids	targeting_work_interface.h	/^		int get_follow_uids(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, $/;"	p	class:TargetingWorkInterface	access:private	signature:(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, uint64_t uid)
TargetingWorkInterface::get_follow_uids_bak	targeting_work_interface.cpp	/^int TargetingWorkInterface::get_follow_uids_bak(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max,$/;"	f	class:TargetingWorkInterface	signature:(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, const char* uid_str)
TargetingWorkInterface::get_follow_uids_bak	targeting_work_interface.h	/^		int get_follow_uids_bak(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max,$/;"	p	class:TargetingWorkInterface	access:private	signature:(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, const char* uid_str)
TargetingWorkInterface::get_targeting_uids	targeting_work_interface.cpp	/^int TargetingWorkInterface::get_targeting_uids(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& reco_uids, $/;"	f	class:TargetingWorkInterface	signature:(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& reco_uids, uint64_t group_uids[], uint16_t group_uid_num, uint32_t max, uint16_t num, char*& p_out_string, int& n_out_len)
TargetingWorkInterface::get_targeting_uids	targeting_work_interface.h	/^		int get_targeting_uids(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& reco_uids, $/;"	p	class:TargetingWorkInterface	access:private	signature:(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& reco_uids, uint64_t group_uids[], uint16_t group_uid_num, uint32_t max, uint16_t num, char*& p_out_string, int& n_out_len)
TargetingWorkInterface::mget_follow_uids	targeting_work_interface.cpp	/^int TargetingWorkInterface::mget_follow_uids(uint64_t mget_uids[], uint32_t get_uid_num, MapMResult& map_m_fof_result,$/;"	f	class:TargetingWorkInterface	signature:(uint64_t mget_uids[], uint32_t get_uid_num, MapMResult& map_m_fof_result, char& split_char, char& second_split_char)
TargetingWorkInterface::mget_follow_uids	targeting_work_interface.h	/^		int mget_follow_uids(uint64_t mget_uids[], uint32_t get_uid_num, MapMResult& map_m_fof_result,$/;"	p	class:TargetingWorkInterface	access:private	signature:(uint64_t mget_uids[], uint32_t get_uid_num, MapMResult& map_m_fof_result, char& split_char, char& second_split_char)
TargetingWorkInterface::release_map_vec_uid	targeting_work_interface.cpp	/^void TargetingWorkInterface::release_map_vec_uid(MAP_VEC_UID& map_vec_uid){$/;"	f	class:TargetingWorkInterface	signature:(MAP_VEC_UID& map_vec_uid)
TargetingWorkInterface::release_map_vec_uid	targeting_work_interface.h	/^	void release_map_vec_uid(MAP_VEC_UID& map_vec_uid);$/;"	p	class:TargetingWorkInterface	access:public	signature:(MAP_VEC_UID& map_vec_uid)
TargetingWorkInterface::split_string_ids	targeting_work_interface.cpp	/^void TargetingWorkInterface::split_string_ids(uint64_t ids[], uint32_t& id_num, $/;"	f	class:TargetingWorkInterface	signature:(uint64_t ids[], uint32_t& id_num, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, const char* str_input, char sep_char, uint32_t limit)
TargetingWorkInterface::split_string_ids	targeting_work_interface.h	/^		void split_string_ids(uint64_t ids[], uint32_t& id_num, $/;"	p	class:TargetingWorkInterface	access:private	signature:(uint64_t ids[], uint32_t& id_num, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, const char* str_input, char sep_char, uint32_t limit = MAX_LIMIT)
TargetingWorkInterface::split_string_ids_in_set	targeting_work_interface.cpp	/^void TargetingWorkInterface::split_string_ids_in_set(MAP_VEC_UID& map_vec_uid, uint64_t rel_uid, $/;"	f	class:TargetingWorkInterface	signature:(MAP_VEC_UID& map_vec_uid, uint64_t rel_uid, const char* str_input, char sep_char, uint32_t limit)
TargetingWorkInterface::split_string_ids_in_set	targeting_work_interface.h	/^		void split_string_ids_in_set(MAP_VEC_UID& map_vec_uid, uint64_t rel_uid, const char* str_input, $/;"	p	class:TargetingWorkInterface	access:private	signature:(MAP_VEC_UID& map_vec_uid, uint64_t rel_uid, const char* str_input, char sep_char, uint32_t limit = MAX_LIMIT)
TargetingWorkInterface::work_core	targeting_work_interface.cpp	/^int TargetingWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:TargetingWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
TargetingWorkInterface::work_core	targeting_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:TargetingWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
TargetingWorkInterface::~TargetingWorkInterface	targeting_work_interface.h	/^		~TargetingWorkInterface(){$/;"	f	class:TargetingWorkInterface	access:public	signature:()
TestSoWorkInterface	test_so_work_interface.cpp	/^DYN_WORK(TestSoWorkInterface);$/;"	v
TestSoWorkInterface	test_so_work_interface.h	/^		TestSoWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:TestSoWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
TestSoWorkInterface	test_so_work_interface.h	/^class TestSoWorkInterface : public UserWorkInterface{$/;"	c	inherits:UserWorkInterface
TestSoWorkInterface::TestSoWorkInterface	test_so_work_interface.h	/^		TestSoWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:TestSoWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
TestSoWorkInterface::get_filter_uid_mid	test_so_work_interface.cpp	/^int TestSoWorkInterface::get_filter_uid_mid(uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_filter_uids,$/;"	f	class:TestSoWorkInterface	signature:(uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_filter_uids, __gnu_cxx::hash_set<uint64_t>& hashset_filter_mids, const std::map<uint64_t, uint64_t>& reco_ids, int num)
TestSoWorkInterface::get_filter_uid_mid	test_so_work_interface.h	/^		int get_filter_uid_mid(uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_filter_uids,$/;"	p	class:TestSoWorkInterface	access:private	signature:(uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_filter_uids, __gnu_cxx::hash_set<uint64_t>& hash_set_filter_mids, const std::map<uint64_t, uint64_t>& reco_ids, int num = -1)
TestSoWorkInterface::get_test_so_uids	test_so_work_interface.cpp	/^int TestSoWorkInterface::get_test_so_uids(const char* uid_str, int num, int type, $/;"	f	class:TestSoWorkInterface	signature:(const char* uid_str, int num, int type, const std::map<uint64_t, uint64_t>& reco_ids, char*& p_out_string, int& n_out_len)
TestSoWorkInterface::get_test_so_uids	test_so_work_interface.h	/^		int get_test_so_uids(const char* uid_str, int num, int type, $/;"	p	class:TestSoWorkInterface	access:private	signature:(const char* uid_str, int num, int type, const std::map<uint64_t, uint64_t>& reco_ids, char*& p_out_string, int& n_out_len)
TestSoWorkInterface::work_core	test_so_work_interface.cpp	/^int TestSoWorkInterface::work_core(json_object *req_json, char* &p_out_string, $/;"	f	class:TestSoWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
TestSoWorkInterface::work_core	test_so_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:TestSoWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
TestSoWorkInterface::~TestSoWorkInterface	test_so_work_interface.h	/^		~TestSoWorkInterface(){$/;"	f	class:TestSoWorkInterface	access:public	signature:()
TrendUserRPMWorkInterface	trenduser_rpm_work_interface.cpp	/^DYN_WORK(TrendUserRPMWorkInterface);$/;"	v
TrendUserRPMWorkInterface	trenduser_rpm_work_interface.h	/^		TrendUserRPMWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:TrendUserRPMWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
TrendUserRPMWorkInterface	trenduser_rpm_work_interface.h	/^class TrendUserRPMWorkInterface : public UserWorkInterface{$/;"	c	inherits:UserWorkInterface
TrendUserRPMWorkInterface::MAX_BRIDGE_NUM	trenduser_rpm_work_interface.h	/^	static const int MAX_BRIDGE_NUM = 3;$/;"	m	class:TrendUserRPMWorkInterface	access:public
TrendUserRPMWorkInterface::REASON_NUM	trenduser_rpm_work_interface.h	/^	static const int REASON_NUM = 4;$/;"	m	class:TrendUserRPMWorkInterface	access:public
TrendUserRPMWorkInterface::TrendUserRPMWorkInterface	trenduser_rpm_work_interface.h	/^		TrendUserRPMWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:TrendUserRPMWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
TrendUserRPMWorkInterface::cands_	trenduser_rpm_work_interface.h	/^		CandUser* cands_;			$/;"	m	class:TrendUserRPMWorkInterface	access:private
TrendUserRPMWorkInterface::generate_out_str	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::generate_out_str(int cand_num, candidate_item_t& cand,$/;"	f	class:TrendUserRPMWorkInterface	signature:(int cand_num, candidate_item_t& cand, int& index, char*& p_out_temp, int& n_len)
TrendUserRPMWorkInterface::generate_out_str	trenduser_rpm_work_interface.h	/^		int generate_out_str(int num, candidate_item_t& cand, int& index, $/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(int num, candidate_item_t& cand, int& index, char*& p_out_temp, int& n_len)
TrendUserRPMWorkInterface::get_offline_reco_uids	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::get_offline_reco_uids(uint64_t uid, uint32_t num, int64_t req_id,$/;"	f	class:TrendUserRPMWorkInterface	signature:(uint64_t uid, uint32_t num, int64_t req_id, char* p_out_string, int& n_out_len)
TrendUserRPMWorkInterface::get_offline_reco_uids	trenduser_rpm_work_interface.h	/^		int get_offline_reco_uids(uint64_t uid, uint32_t num, int64_t req_id,$/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(uint64_t uid, uint32_t num, int64_t req_id, char* p_out_string, int& n_out_len)
TrendUserRPMWorkInterface::get_online_reco_result	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::get_online_reco_result(uint64_t uid, uint32_t num, $/;"	f	class:TrendUserRPMWorkInterface	signature:(uint64_t uid, uint32_t num, int64_t req_id, char* p_out_string, int& n_out_len)
TrendUserRPMWorkInterface::get_online_reco_result	trenduser_rpm_work_interface.h	/^		int get_online_reco_result(uint64_t uid, uint32_t num, int64_t req_id,$/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(uint64_t uid, uint32_t num, int64_t req_id, char* p_out_string, int& n_out_len)
TrendUserRPMWorkInterface::get_reco_uids	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::get_reco_uids(const char* uid_str, uint32_t num, int type, int zip,$/;"	f	class:TrendUserRPMWorkInterface	signature:(const char* uid_str, uint32_t num, int type, int zip, const int64_t req_id, char* p_out_string, int& n_out_len)
TrendUserRPMWorkInterface::get_reco_uids	trenduser_rpm_work_interface.h	/^		int get_reco_uids(const char* uid_str, uint32_t num, int type, int zip, const int64_t req_id,$/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(const char* uid_str, uint32_t num, int type, int zip, const int64_t req_id, char* p_out_string, int& n_out_len)
TrendUserRPMWorkInterface::get_user_feature	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::get_user_feature(uint64_t& return_value, uint64_t uid, uint64_t item_key){$/;"	f	class:TrendUserRPMWorkInterface	signature:(uint64_t& return_value, uint64_t uid, uint64_t item_key)
TrendUserRPMWorkInterface::get_user_feature	trenduser_rpm_work_interface.h	/^		int get_user_feature(uint64_t& return_value, uint64_t uid, uint64_t item_key);$/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(uint64_t& return_value, uint64_t uid, uint64_t item_key)
TrendUserRPMWorkInterface::get_user_mfeature	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::get_user_mfeature(std::map<uint64_t, uint64_t>& map_return_value,$/;"	f	class:TrendUserRPMWorkInterface	signature:(std::map<uint64_t, uint64_t>& map_return_value, uint64_t uid, const std::vector<uint64_t>& vec_item_key)
TrendUserRPMWorkInterface::get_user_mfeature	trenduser_rpm_work_interface.h	/^		int get_user_mfeature(std::map<uint64_t, uint64_t>& map_return_value,$/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(std::map<uint64_t, uint64_t>& map_return_value, uint64_t uid, const std::vector<uint64_t>& vec_item_key)
TrendUserRPMWorkInterface::max_b_num	trenduser_rpm_work_interface.h	/^	static const uint32_t max_b_num = 2;$/;"	m	class:TrendUserRPMWorkInterface	access:public
TrendUserRPMWorkInterface::work_core	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:TrendUserRPMWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
TrendUserRPMWorkInterface::work_core	trenduser_rpm_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:TrendUserRPMWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
TrendUserRPMWorkInterface::~TrendUserRPMWorkInterface	trenduser_rpm_work_interface.h	/^		~TrendUserRPMWorkInterface(){$/;"	f	class:TrendUserRPMWorkInterface	access:public	signature:()
UserFollowProxyWorkInterface	user_follow_proxy_work_interface.cpp	/^DYN_WORK(UserFollowProxyWorkInterface);$/;"	v
UserFollowProxyWorkInterface	user_follow_proxy_work_interface.h	/^		UserFollowProxyWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:UserFollowProxyWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
UserFollowProxyWorkInterface	user_follow_proxy_work_interface.h	/^class UserFollowProxyWorkInterface : public WorkInterface{$/;"	c	inherits:WorkInterface
UserFollowProxyWorkInterface::UserFollowProxyWorkInterface	user_follow_proxy_work_interface.h	/^		UserFollowProxyWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:UserFollowProxyWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
UserFollowProxyWorkInterface::get_api_follow_uids	user_follow_proxy_work_interface.cpp	/^int UserFollowProxyWorkInterface::get_api_follow_uids(uint64_t uid, $/;"	f	class:UserFollowProxyWorkInterface	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
UserFollowProxyWorkInterface::get_api_follow_uids	user_follow_proxy_work_interface.h	/^		int get_api_follow_uids(uint64_t uid, char* &p_out_string, int& n_out_len);$/;"	p	class:UserFollowProxyWorkInterface	access:private	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
UserFollowProxyWorkInterface::get_follow_uids	user_follow_proxy_work_interface.cpp	/^int UserFollowProxyWorkInterface::get_follow_uids(uint64_t uid, int type, $/;"	f	class:UserFollowProxyWorkInterface	signature:(uint64_t uid, int type, char* &p_out_string, int& n_out_len, int64_t req_id)
UserFollowProxyWorkInterface::get_follow_uids	user_follow_proxy_work_interface.h	/^		int get_follow_uids(uint64_t uid, int type, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:UserFollowProxyWorkInterface	access:private	signature:(uint64_t uid, int type, char* &p_out_string, int& n_out_len, int64_t req_id)
UserFollowProxyWorkInterface::get_offline_follow_uids	user_follow_proxy_work_interface.cpp	/^int UserFollowProxyWorkInterface::get_offline_follow_uids(uint64_t uid, $/;"	f	class:UserFollowProxyWorkInterface	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
UserFollowProxyWorkInterface::get_offline_follow_uids	user_follow_proxy_work_interface.h	/^		int get_offline_follow_uids(uint64_t uid, char* &p_out_string, int& n_out_len);$/;"	p	class:UserFollowProxyWorkInterface	access:private	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
UserFollowProxyWorkInterface::get_online_follow_uids	user_follow_proxy_work_interface.cpp	/^int UserFollowProxyWorkInterface::get_online_follow_uids(uint64_t uid, $/;"	f	class:UserFollowProxyWorkInterface	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
UserFollowProxyWorkInterface::get_online_follow_uids	user_follow_proxy_work_interface.h	/^		int get_online_follow_uids(uint64_t uid, char* &p_out_string, int& n_out_len);$/;"	p	class:UserFollowProxyWorkInterface	access:private	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
UserFollowProxyWorkInterface::work_core	user_follow_proxy_work_interface.cpp	/^int UserFollowProxyWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:UserFollowProxyWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
UserFollowProxyWorkInterface::work_core	user_follow_proxy_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:UserFollowProxyWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
UserFollowProxyWorkInterface::~UserFollowProxyWorkInterface	user_follow_proxy_work_interface.h	/^		~UserFollowProxyWorkInterface(){$/;"	f	class:UserFollowProxyWorkInterface	access:public	signature:()
UserRecomWorkInterface	userrecom_work_interface.cpp	/^DYN_WORK(UserRecomWorkInterface);$/;"	v
UserRecomWorkInterface	userrecom_work_interface.h	/^		UserRecomWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:UserRecomWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
UserRecomWorkInterface	userrecom_work_interface.h	/^class UserRecomWorkInterface : public UserWorkInterface{$/;"	c	inherits:UserWorkInterface
UserRecomWorkInterface::Is_Gray	userrecom_work_interface.h	/^		static bool Is_Gray(const uint64_t request_id){$/;"	f	class:UserRecomWorkInterface	access:public	signature:(const uint64_t request_id)
UserRecomWorkInterface::UserRecomWorkInterface	userrecom_work_interface.h	/^		UserRecomWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:UserRecomWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
UserRecomWorkInterface::cands_	userrecom_work_interface.h	/^		CandUser* cands_;			$/;"	m	class:UserRecomWorkInterface	access:private
UserRecomWorkInterface::generate_out_str	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::generate_out_str(int cand_num, const candidate_item_t& cand,$/;"	f	class:UserRecomWorkInterface	signature:(int cand_num, const candidate_item_t& cand, uint32_t user_type, int& index, char*& p_out_temp, int& n_len)
UserRecomWorkInterface::generate_out_str	userrecom_work_interface.h	/^		int generate_out_str(int num, const candidate_item_t& cand,$/;"	p	class:UserRecomWorkInterface	access:private	signature:(int num, const candidate_item_t& cand, uint32_t user_type, int& index, char*& p_out_temp, int& n_len)
UserRecomWorkInterface::get_offline_reco_uids	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::get_offline_reco_uids(uint64_t uid, uint32_t num, $/;"	f	class:UserRecomWorkInterface	signature:(uint64_t uid, uint32_t num, char* p_out_string, int& n_out_len)
UserRecomWorkInterface::get_offline_reco_uids	userrecom_work_interface.h	/^		int get_offline_reco_uids(uint64_t uid, uint32_t num, $/;"	p	class:UserRecomWorkInterface	access:private	signature:(uint64_t uid, uint32_t num, char* p_out_string, int& n_out_len)
UserRecomWorkInterface::get_reco_uids	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::get_reco_uids(const char* uid_str, uint32_t num, int type, int zip,$/;"	f	class:UserRecomWorkInterface	signature:(const char* uid_str, uint32_t num, int type, int zip, char* p_out_string, int& n_out_len)
UserRecomWorkInterface::get_reco_uids	userrecom_work_interface.h	/^		int get_reco_uids(const char* uid_str, uint32_t num, int type, int zip, $/;"	p	class:UserRecomWorkInterface	access:private	signature:(const char* uid_str, uint32_t num, int type, int zip, char* p_out_string, int& n_out_len)
UserRecomWorkInterface::get_user_feature	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::get_user_feature(uint64_t& return_value, uint64_t uid, uint64_t item_key){$/;"	f	class:UserRecomWorkInterface	signature:(uint64_t& return_value, uint64_t uid, uint64_t item_key)
UserRecomWorkInterface::get_user_feature	userrecom_work_interface.h	/^		int get_user_feature(uint64_t& return_value, uint64_t uid, uint64_t item_key);$/;"	p	class:UserRecomWorkInterface	access:private	signature:(uint64_t& return_value, uint64_t uid, uint64_t item_key)
UserRecomWorkInterface::get_user_mfeature	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::get_user_mfeature(std::map<uint64_t, uint64_t>& map_return_value,$/;"	f	class:UserRecomWorkInterface	signature:(std::map<uint64_t, uint64_t>& map_return_value, uint64_t uid, const std::vector<uint64_t>& vec_item_key)
UserRecomWorkInterface::get_user_mfeature	userrecom_work_interface.h	/^		int get_user_mfeature(std::map<uint64_t, uint64_t>& map_return_value,$/;"	p	class:UserRecomWorkInterface	access:private	signature:(std::map<uint64_t, uint64_t>& map_return_value, uint64_t uid, const std::vector<uint64_t>& vec_item_key)
UserRecomWorkInterface::max_b_num	userrecom_work_interface.h	/^	static const uint32_t max_b_num = 2;	\/\/ 限制桥梁数目$/;"	m	class:UserRecomWorkInterface	access:public
UserRecomWorkInterface::work_core	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:UserRecomWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
UserRecomWorkInterface::work_core	userrecom_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:UserRecomWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
UserRecomWorkInterface::~UserRecomWorkInterface	userrecom_work_interface.h	/^		~UserRecomWorkInterface(){$/;"	f	class:UserRecomWorkInterface	access:public	signature:()
VEC_UID	targeting_work_interface.h	/^	typedef std::vector<uint64_t> VEC_UID;$/;"	t	class:TargetingWorkInterface	access:public
VerWorkInterface	ver_work_interface.cpp	/^DYN_WORK(VerWorkInterface);$/;"	v
VerWorkInterface	ver_work_interface.h	/^		VerWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:VerWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
VerWorkInterface	ver_work_interface.h	/^class VerWorkInterface : public UserWorkInterface{$/;"	c	inherits:UserWorkInterface
VerWorkInterface::VerWorkInterface	ver_work_interface.h	/^		VerWorkInterface(DbCompany*& p_db_company, int interface_id):$/;"	f	class:VerWorkInterface	access:public	signature:(DbCompany*& p_db_company, int interface_id)
VerWorkInterface::work_core	ver_work_interface.cpp	/^int VerWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:VerWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
VerWorkInterface::work_core	ver_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:VerWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
VerWorkInterface::~VerWorkInterface	ver_work_interface.h	/^		~VerWorkInterface(){$/;"	f	class:VerWorkInterface	access:public	signature:()
_AD_INDEX_WORK_INTERFACE_HEADER_	ad_index_work_interface.h	2;"	d
_BLOCK_CACHE_WORK_INTERFACE_HEADER_	block_cache_work_interface.h	2;"	d
_EXAMPLE_WORK_INTERFACE_HEADER_	example_work_interface.h	2;"	d
_FILTERUSER_WORK_INTERFACE_HEADER_	filter_user_work_interface.h	2;"	d
_FILTER_CACHE_WORK_INTERFACE_HEADER_	filter_cache_work_interface.h	2;"	d
_INTERSECTION_WORK_INTERFACE_HEADER_	intersection_work_interface.h	2;"	d
_NODE_USERRECOM_WORK_INTERFACE_HEADER_	node_userrecom_work_interface.h	2;"	d
_P2P_WORK_INTERFACE_HEADER_	p2p_work_interface.h	2;"	d
_PARA_USERRECOM_WORK_INTERFACE_HEADER_	para_userrecom_work_interface.h	2;"	d
_RECENTLYGZ_WORK_INTERFACE_HEADER_	recentlygz_work_interface.h	2;"	d
_RPMMODEL_WORK_INTERFACE_HEADER_	rpmmodel_work_interface.h	2;"	d
_TARGETING_WORK_INTERFACE_HEADER_	targeting_work_interface.h	2;"	d
_TESTSO_WORK_INTERFACE_HEADER_	test_so_work_interface.h	2;"	d
_TRENDUSER_RPM_WORK_INTERFACE_HEADER_	trenduser_rpm_work_interface.h	2;"	d
_USERRECOM_WORK_INTERFACE_HEADER_	userrecom_work_interface.h	2;"	d
_USER_FOLLOW_PROXY_WORK_INTERFACE_HEADER_	user_follow_proxy_work_interface.h	2;"	d
_VER_WORK_INTERFACE_HEADER_	ver_work_interface.h	2;"	d
bridgeInfo_	recentlygz_work_interface.h	/^			BridgeStr* bridgeInfo_;								\/\/ 推荐用户桥梁信息$/;"	m	struct:RecentlyGZWorkInterface::RecomInfo	access:public
bridge_uid_vec	recentlygz_work_interface.h	/^			vector<uint64_t> bridge_uid_vec;	\/\/ 桥梁用户$/;"	m	struct:RecentlyGZWorkInterface::BridgeStr	access:public
calc_recom_result	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::calc_recom_result(const __gnu_cxx::hash_set<uint64_t>& reco_ids, $/;"	f	class:RecentlyGZWorkInterface	signature:(const __gnu_cxx::hash_set<uint64_t>& reco_ids, const HashMapGZResult& reco_dict, const __gnu_cxx::hash_set<uint64_t>& gz_ids, vector<RecomInfo>& result_vec)
calc_recom_result	recentlygz_work_interface.h	/^		int calc_recom_result(const __gnu_cxx::hash_set<uint64_t>& reco_ids, const HashMapGZResult& reco_dict,$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const __gnu_cxx::hash_set<uint64_t>& reco_ids, const HashMapGZResult& reco_dict, const __gnu_cxx::hash_set<uint64_t>& gz_ids, vector<RecomInfo>& result_vec)
cands_	trenduser_rpm_work_interface.h	/^		CandUser* cands_;			$/;"	m	class:TrendUserRPMWorkInterface	access:private
cands_	userrecom_work_interface.h	/^		CandUser* cands_;			$/;"	m	class:UserRecomWorkInterface	access:private
cmp_RecomInfo	recentlygz_work_interface.h	/^		static bool cmp_RecomInfo(const RecomInfo& a, const RecomInfo& b){$/;"	f	class:RecentlyGZWorkInterface	access:private	signature:(const RecomInfo& a, const RecomInfo& b)
cmp_all	p2p_work_interface.h	/^static bool cmp_all(const RecoInfo& a, const RecoInfo& b){$/;"	f	signature:(const RecoInfo& a, const RecoInfo& b)
cmp_score	p2p_work_interface.h	/^static bool cmp_score(const RecoInfo& a, const RecoInfo& b){$/;"	f	signature:(const RecoInfo& a, const RecoInfo& b)
construct_user_data	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::construct_user_data(const MapMResult& map_m_fof_result, const char split_char, $/;"	f	class:RecentlyGZWorkInterface	signature:(const MapMResult& map_m_fof_result, const char split_char, const char second_split_char, HashMapGZResult& gz_dict, __gnu_cxx::hash_set<uint64_t>& recoid_set)
construct_user_data	recentlygz_work_interface.h	/^		int construct_user_data(const MapMResult& map_m_fof_result, const char split_char, $/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const MapMResult& map_m_fof_result, const char split_char, const char second_split_char, HashMapGZResult& gz_dict, __gnu_cxx::hash_set<uint64_t>& recoid_set)
find_indexes	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::find_indexes(const char* db_name, json_object* req_json, $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, json_object* req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
find_indexes	ad_index_work_interface.h	/^		int find_indexes(const char* db_name, json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
generate_out_str	node_userrecom_work_interface.h	/^		int generate_out_str(int num, const candidate_item_t& cand,$/;"	p	class:NodeUserRecomWorkInterface	access:private	signature:(int num, const candidate_item_t& cand, uint32_t user_type, int& index, char*& p_out_temp, int& n_len)
generate_out_str	para_userrecom_work_interface.h	/^		int generate_out_str(int num, const candidate_item_t& cand,$/;"	p	class:ParaUserRecomWorkInterface	access:private	signature:(int num, const candidate_item_t& cand, uint32_t user_type, int& index, char*& p_out_temp, int& n_len)
generate_out_str	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::generate_out_str(int cand_num, candidate_item_t& cand,$/;"	f	class:TrendUserRPMWorkInterface	signature:(int cand_num, candidate_item_t& cand, int& index, char*& p_out_temp, int& n_len)
generate_out_str	trenduser_rpm_work_interface.h	/^		int generate_out_str(int num, candidate_item_t& cand, int& index, $/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(int num, candidate_item_t& cand, int& index, char*& p_out_temp, int& n_len)
generate_out_str	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::generate_out_str(int cand_num, const candidate_item_t& cand,$/;"	f	class:UserRecomWorkInterface	signature:(int cand_num, const candidate_item_t& cand, uint32_t user_type, int& index, char*& p_out_temp, int& n_len)
generate_out_str	userrecom_work_interface.h	/^		int generate_out_str(int num, const candidate_item_t& cand,$/;"	p	class:UserRecomWorkInterface	access:private	signature:(int num, const candidate_item_t& cand, uint32_t user_type, int& index, char*& p_out_temp, int& n_len)
generate_output_str	intersection_work_interface.cpp	/^void IntersectionWorkInterface::generate_output_str(const vector<uint64_t>& vec1, const vector<uint64_t>& vec2, $/;"	f	class:IntersectionWorkInterface	signature:(const vector<uint64_t>& vec1, const vector<uint64_t>& vec2, const int type, char*& p_out_string, int& n_len)
generate_output_str	intersection_work_interface.cpp	/^void IntersectionWorkInterface::generate_output_str(const vector<uint64_t>& vec_allfol, $/;"	f	class:IntersectionWorkInterface	signature:(const vector<uint64_t>& vec_allfol, const vector<uint64_t>& vec_result, const vector<uint64_t>& vec_good, const int type, char*& p_out_string, int& n_len)
generate_output_str	intersection_work_interface.cpp	/^void IntersectionWorkInterface::generate_output_str(const vector<uint64_t>& vec_result, const int type, $/;"	f	class:IntersectionWorkInterface	signature:(const vector<uint64_t>& vec_result, const int type, char*& p_out_string, int& n_len)
generate_output_str	intersection_work_interface.h	/^		void generate_output_str(const vector<uint64_t>& vec1, const vector<uint64_t>& vec2, const int type, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const vector<uint64_t>& vec1, const vector<uint64_t>& vec2, const int type, char*& p_out_string, int& n_len)
generate_output_str	intersection_work_interface.h	/^		void generate_output_str(const vector<uint64_t>& vec_allfol, const vector<uint64_t>& vec_result,$/;"	p	class:IntersectionWorkInterface	access:private	signature:(const vector<uint64_t>& vec_allfol, const vector<uint64_t>& vec_result, const vector<uint64_t>& vec_good, const int type, char*& p_out_string, int& n_len)
generate_output_str	intersection_work_interface.h	/^		void generate_output_str(const vector<uint64_t>& vec_result, const int type, char*& p_out_string, int& n_len);$/;"	p	class:IntersectionWorkInterface	access:private	signature:(const vector<uint64_t>& vec_result, const int type, char*& p_out_string, int& n_len)
generate_output_str	p2p_work_interface.cpp	/^void P2PWorkInterface::generate_output_str(const vector<RecoInfo>& result_vec, const int num, $/;"	f	class:P2PWorkInterface	signature:(const vector<RecoInfo>& result_vec, const int num, const uint64_t tuid, char*& p_out_string, int& n_out_len)
generate_output_str	p2p_work_interface.h	/^		void generate_output_str(const vector<RecoInfo>& result_vec, const int num,$/;"	p	class:P2PWorkInterface	access:private	signature:(const vector<RecoInfo>& result_vec, const int num, const uint64_t tuid, char*& p_out_string, int& n_out_len)
generate_output_str	recentlygz_work_interface.cpp	/^void RecentlyGZWorkInterface::generate_output_str(const vector<RecomInfo>& res_vec, char*& out_str, int& n_len){$/;"	f	class:RecentlyGZWorkInterface	signature:(const vector<RecomInfo>& res_vec, char*& out_str, int& n_len)
generate_output_str	recentlygz_work_interface.h	/^		void generate_output_str(const vector<RecomInfo>& res_vec, char*& out_str, int& n_len);$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const vector<RecomInfo>& res_vec, char*& out_str, int& n_len)
generate_output_str	targeting_work_interface.cpp	/^int TargetingWorkInterface::generate_output_str(const MAP_VEC_UID& map_vec_uid, int num, $/;"	f	class:TargetingWorkInterface	signature:(const MAP_VEC_UID& map_vec_uid, int num, char*& p_out_string, int& n_len)
generate_output_str	targeting_work_interface.h	/^		int generate_output_str(const MAP_VEC_UID& map_vec_uid, int num, $/;"	p	class:TargetingWorkInterface	access:private	signature:(const MAP_VEC_UID& map_vec_uid, int num, char*& p_out_string, int& n_len)
get_ad_db_interface	ad_index_work_interface.cpp	/^GlobalAdDbInterface* AdIndexWorkInterface::get_ad_db_interface(const char* db_name){$/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name)
get_ad_db_interface	ad_index_work_interface.h	/^		GlobalAdDbInterface* get_ad_db_interface(const char* db_name);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name)
get_api_follow_uids	user_follow_proxy_work_interface.cpp	/^int UserFollowProxyWorkInterface::get_api_follow_uids(uint64_t uid, $/;"	f	class:UserFollowProxyWorkInterface	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
get_api_follow_uids	user_follow_proxy_work_interface.h	/^		int get_api_follow_uids(uint64_t uid, char* &p_out_string, int& n_out_len);$/;"	p	class:UserFollowProxyWorkInterface	access:private	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
get_attrs	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::get_attrs(const char* db_name, uint64_t ad_id, const char* item_keys[], $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, uint64_t ad_id, const char* item_keys[], size_t item_key_num, char* &p_out_string, int& n_out_len, int64_t req_id)
get_attrs	ad_index_work_interface.h	/^		int get_attrs(const char* db_name, uint64_t ad_id, const char* item_keys[], size_t item_key_len,$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, uint64_t ad_id, const char* item_keys[], size_t item_key_len, char* &p_out_string, int& n_out_len, int64_t req_id)
get_block	block_cache_work_interface.cpp	/^int BlockCacheWorkInterface::get_block(const char* uid_str, char* &p_out_string, $/;"	f	class:BlockCacheWorkInterface	signature:(const char* uid_str, char* &p_out_string, int& n_out_len, const char* from_str, int write_flag)
get_block	block_cache_work_interface.h	/^		int get_block(const char* uid_str, char* &p_out_string, int& n_out_len, $/;"	p	class:BlockCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_out_string, int& n_out_len, const char* from_str, int write_flag = 1)
get_block_from_db	block_cache_work_interface.cpp	/^int BlockCacheWorkInterface::get_block_from_db(const char* uid_str, char* &p_result, const char* db_name){$/;"	f	class:BlockCacheWorkInterface	signature:(const char* uid_str, char* &p_result, const char* db_name)
get_block_from_db	block_cache_work_interface.h	/^		int get_block_from_db(const char* uid_str, char* &p_result, const char* db_name);$/;"	p	class:BlockCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_result, const char* db_name)
get_data_set	p2p_work_interface.cpp	/^int P2PWorkInterface::get_data_set(char* p_result, char split_char, char second_split_char, $/;"	f	class:P2PWorkInterface	signature:(char* p_result, char split_char, char second_split_char, __gnu_cxx::hash_set<uint64_t>& hashset_uids)
get_data_set	p2p_work_interface.h	/^		int get_data_set(char* p_result, char split_char, char second_split_char,$/;"	p	class:P2PWorkInterface	access:private	signature:(char* p_result, char split_char, char second_split_char, __gnu_cxx::hash_set<uint64_t>& hashset_uids)
get_fanssim_data	p2p_work_interface.cpp	/^void P2PWorkInterface::get_fanssim_data(const char*& str_input, const char sep_char, $/;"	f	class:P2PWorkInterface	signature:(const char*& str_input, const char sep_char, const char second_sep_char, vector<PAIR_INT_FLOAT>& vec_ids)
get_fanssim_data	p2p_work_interface.h	/^		void get_fanssim_data(const char*& str_input, const char sep_char, $/;"	p	class:P2PWorkInterface	access:private	signature:(const char*& str_input, const char sep_char, const char second_sep_char, vector<PAIR_INT_FLOAT>& vec_ids)
get_filter	filter_cache_work_interface.cpp	/^int FilterCacheWorkInterface::get_filter(const char* uid_str, char* &p_out_string, $/;"	f	class:FilterCacheWorkInterface	signature:(const char* uid_str, char* &p_out_string, int& n_out_len, const char* from_str, int write_flag)
get_filter	filter_cache_work_interface.h	/^		int get_filter(const char* uid_str, char* &p_out_string, int& n_out_len, $/;"	p	class:FilterCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_out_string, int& n_out_len, const char* from_str, int write_flag = 1)
get_filter_api_set	test_so_work_interface.cpp	/^int get_filter_api_set(char* p_filter_api_result, char sep_char, char second_sep_char, const char* first_str,$/;"	f	signature:(char* p_filter_api_result, char sep_char, char second_sep_char, const char* first_str, __gnu_cxx::hash_set<uint64_t>& hashset_filter_uids, int num = -1)
get_filter_from_db	filter_cache_work_interface.cpp	/^int FilterCacheWorkInterface::get_filter_from_db(const char* uid_str, char* &p_result, const char* db_name){$/;"	f	class:FilterCacheWorkInterface	signature:(const char* uid_str, char* &p_result, const char* db_name)
get_filter_from_db	filter_cache_work_interface.h	/^		int get_filter_from_db(const char* uid_str, char* &p_result, const char* db_name);$/;"	p	class:FilterCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_result, const char* db_name)
get_filter_set	test_so_work_interface.cpp	/^int get_filter_set(char* p_filter_result, char sep_char, char second_sep_char, const char* first_str,$/;"	f	signature:(char* p_filter_result, char sep_char, char second_sep_char, const char* first_str, __gnu_cxx::hash_set<uint64_t>& hashset_filter_uids, int num = -1)
get_filter_uid_mid	test_so_work_interface.cpp	/^int TestSoWorkInterface::get_filter_uid_mid(uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_filter_uids,$/;"	f	class:TestSoWorkInterface	signature:(uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_filter_uids, __gnu_cxx::hash_set<uint64_t>& hashset_filter_mids, const std::map<uint64_t, uint64_t>& reco_ids, int num)
get_filter_uid_mid	test_so_work_interface.h	/^		int get_filter_uid_mid(uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_filter_uids,$/;"	p	class:TestSoWorkInterface	access:private	signature:(uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_filter_uids, __gnu_cxx::hash_set<uint64_t>& hash_set_filter_mids, const std::map<uint64_t, uint64_t>& reco_ids, int num = -1)
get_follow_uids	intersection_work_interface.cpp	/^int IntersectionWorkInterface::get_follow_uids(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	f	class:IntersectionWorkInterface	signature:(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
get_follow_uids	intersection_work_interface.h	/^		int get_follow_uids(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
get_follow_uids	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::get_follow_uids(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	f	class:RecentlyGZWorkInterface	signature:(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
get_follow_uids	recentlygz_work_interface.h	/^		int get_follow_uids(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const uint64_t uid, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
get_follow_uids	targeting_work_interface.cpp	/^int TargetingWorkInterface::get_follow_uids(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, $/;"	f	class:TargetingWorkInterface	signature:(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, uint64_t uid)
get_follow_uids	targeting_work_interface.h	/^		int get_follow_uids(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, $/;"	p	class:TargetingWorkInterface	access:private	signature:(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, uint64_t uid)
get_follow_uids	user_follow_proxy_work_interface.cpp	/^int UserFollowProxyWorkInterface::get_follow_uids(uint64_t uid, int type, $/;"	f	class:UserFollowProxyWorkInterface	signature:(uint64_t uid, int type, char* &p_out_string, int& n_out_len, int64_t req_id)
get_follow_uids	user_follow_proxy_work_interface.h	/^		int get_follow_uids(uint64_t uid, int type, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:UserFollowProxyWorkInterface	access:private	signature:(uint64_t uid, int type, char* &p_out_string, int& n_out_len, int64_t req_id)
get_follow_uids_bak	intersection_work_interface.cpp	/^int IntersectionWorkInterface::get_follow_uids_bak(const char* uid_str, $/;"	f	class:IntersectionWorkInterface	signature:(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
get_follow_uids_bak	intersection_work_interface.h	/^		int get_follow_uids_bak(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, uint32_t& follow_uid_num)
get_follow_uids_bak	targeting_work_interface.cpp	/^int TargetingWorkInterface::get_follow_uids_bak(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max,$/;"	f	class:TargetingWorkInterface	signature:(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, const char* uid_str)
get_follow_uids_bak	targeting_work_interface.h	/^		int get_follow_uids_bak(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max,$/;"	p	class:TargetingWorkInterface	access:private	signature:(uint64_t follow_uids[], uint32_t& follow_uid_num, uint32_t max, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, const char* uid_str)
get_indexes	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::get_indexes(const char* db_name, uint64_t ad_id, const char* item_keys[], $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, uint64_t ad_id, const char* item_keys[], size_t item_key_num, char* &p_out_string, int& n_out_len, int64_t req_id)
get_indexes	ad_index_work_interface.h	/^		int get_indexes(const char* db_name, uint64_t ad_id, const char* item_key[], size_t item_key_len,$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, uint64_t ad_id, const char* item_key[], size_t item_key_len, char* &p_out_string, int& n_out_len, int64_t req_id)
get_intersection	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::get_intersection(const __gnu_cxx::hash_set<uint64_t>& src_set, $/;"	f	class:RecentlyGZWorkInterface	signature:(const __gnu_cxx::hash_set<uint64_t>& src_set, const char* db_name, bool cull, __gnu_cxx::hash_set<uint64_t>& des_set)
get_intersection	recentlygz_work_interface.h	/^		int get_intersection(const __gnu_cxx::hash_set<uint64_t>& src_set, const char* db_name, bool cull,$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const __gnu_cxx::hash_set<uint64_t>& src_set, const char* db_name, bool cull, __gnu_cxx::hash_set<uint64_t>& des_set)
get_intersection_uids	intersection_work_interface.cpp	/^int IntersectionWorkInterface::get_intersection_uids(const char* uid_str, const int type, char*& p_out_string, $/;"	f	class:IntersectionWorkInterface	signature:(const char* uid_str, const int type, char*& p_out_string, int& n_out_len)
get_intersection_uids	intersection_work_interface.h	/^		int get_intersection_uids(const char* uid_str, const int type, char*& p_out_string, int& n_out_len);$/;"	p	class:IntersectionWorkInterface	access:private	signature:(const char* uid_str, const int type, char*& p_out_string, int& n_out_len)
get_intimacy_data	p2p_work_interface.cpp	/^int P2PWorkInterface::get_intimacy_data(const uint64_t uid, vector<PAIR_INT_FLOAT>& vec_ids){$/;"	f	class:P2PWorkInterface	signature:(const uint64_t uid, vector<PAIR_INT_FLOAT>& vec_ids)
get_intimacy_data	p2p_work_interface.h	/^		int get_intimacy_data(const uint64_t uid, vector<PAIR_INT_FLOAT>& vec_ids);$/;"	p	class:P2PWorkInterface	access:private	signature:(const uint64_t uid, vector<PAIR_INT_FLOAT>& vec_ids)
get_intime_uids	intersection_work_interface.cpp	/^int IntersectionWorkInterface::get_intime_uids(const char* uid_str, const __gnu_cxx::hash_set<uint64_t>& reco_uids, $/;"	f	class:IntersectionWorkInterface	signature:(const char* uid_str, const __gnu_cxx::hash_set<uint64_t>& reco_uids, char*& p_out_string, int& n_out_len)
get_intime_uids	intersection_work_interface.h	/^		int get_intime_uids(const char* uid_str, const __gnu_cxx::hash_set<uint64_t>& reco_uids, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const char* uid_str, const __gnu_cxx::hash_set<uint64_t>& reco_uids, char*& p_out_string, int& n_out_len)
get_isread_id_set	test_so_work_interface.cpp	/^int get_isread_id_set(char* p_isread_result, char sep_char, char second_sep_char, const char* first_str,$/;"	f	signature:(char* p_isread_result, char sep_char, char second_sep_char, const char* first_str, __gnu_cxx::hash_set<uint64_t>& hashset_isread_ids, int num = -1)
get_offline_follow_uids	user_follow_proxy_work_interface.cpp	/^int UserFollowProxyWorkInterface::get_offline_follow_uids(uint64_t uid, $/;"	f	class:UserFollowProxyWorkInterface	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
get_offline_follow_uids	user_follow_proxy_work_interface.h	/^		int get_offline_follow_uids(uint64_t uid, char* &p_out_string, int& n_out_len);$/;"	p	class:UserFollowProxyWorkInterface	access:private	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
get_offline_reco_uids	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::get_offline_reco_uids(uint64_t uid, uint32_t num, int64_t req_id,$/;"	f	class:TrendUserRPMWorkInterface	signature:(uint64_t uid, uint32_t num, int64_t req_id, char* p_out_string, int& n_out_len)
get_offline_reco_uids	trenduser_rpm_work_interface.h	/^		int get_offline_reco_uids(uint64_t uid, uint32_t num, int64_t req_id,$/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(uint64_t uid, uint32_t num, int64_t req_id, char* p_out_string, int& n_out_len)
get_offline_reco_uids	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::get_offline_reco_uids(uint64_t uid, uint32_t num, $/;"	f	class:UserRecomWorkInterface	signature:(uint64_t uid, uint32_t num, char* p_out_string, int& n_out_len)
get_offline_reco_uids	userrecom_work_interface.h	/^		int get_offline_reco_uids(uint64_t uid, uint32_t num, $/;"	p	class:UserRecomWorkInterface	access:private	signature:(uint64_t uid, uint32_t num, char* p_out_string, int& n_out_len)
get_online_follow_uids	user_follow_proxy_work_interface.cpp	/^int UserFollowProxyWorkInterface::get_online_follow_uids(uint64_t uid, $/;"	f	class:UserFollowProxyWorkInterface	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
get_online_follow_uids	user_follow_proxy_work_interface.h	/^		int get_online_follow_uids(uint64_t uid, char* &p_out_string, int& n_out_len);$/;"	p	class:UserFollowProxyWorkInterface	access:private	signature:(uint64_t uid, char* &p_out_string, int& n_out_len)
get_online_reco_result	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::get_online_reco_result(uint64_t uid, uint32_t num, $/;"	f	class:TrendUserRPMWorkInterface	signature:(uint64_t uid, uint32_t num, int64_t req_id, char* p_out_string, int& n_out_len)
get_online_reco_result	trenduser_rpm_work_interface.h	/^		int get_online_reco_result(uint64_t uid, uint32_t num, int64_t req_id,$/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(uint64_t uid, uint32_t num, int64_t req_id, char* p_out_string, int& n_out_len)
get_reco_uids	node_userrecom_work_interface.cpp	/^int NodeUserRecomWorkInterface::get_reco_uids(const char* uid_str, uint64_t node_uids[], $/;"	f	class:NodeUserRecomWorkInterface	signature:(const char* uid_str, uint64_t node_uids[], uint32_t node_uids_num, uint32_t num, char* p_out_string, int& n_out_len)
get_reco_uids	node_userrecom_work_interface.h	/^		int get_reco_uids(const char* uid_str, uint64_t node_uids[], uint32_t node_uids_num,$/;"	p	class:NodeUserRecomWorkInterface	access:private	signature:(const char* uid_str, uint64_t node_uids[], uint32_t node_uids_num, uint32_t num, char* p_out_string, int& n_out_len)
get_reco_uids	para_userrecom_work_interface.cpp	/^int ParaUserRecomWorkInterface::get_reco_uids(const char* uid_str, uint32_t num, $/;"	f	class:ParaUserRecomWorkInterface	signature:(const char* uid_str, uint32_t num, uint32_t rel_num, char* p_out_string, int& n_out_len)
get_reco_uids	para_userrecom_work_interface.h	/^		int get_reco_uids(const char* uid_str, uint32_t num, uint32_t rel_num, char* p_out_string, int& n_out_len);$/;"	p	class:ParaUserRecomWorkInterface	access:private	signature:(const char* uid_str, uint32_t num, uint32_t rel_num, char* p_out_string, int& n_out_len)
get_reco_uids	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::get_reco_uids(const char* uid_str, uint32_t num, int type, int zip,$/;"	f	class:TrendUserRPMWorkInterface	signature:(const char* uid_str, uint32_t num, int type, int zip, const int64_t req_id, char* p_out_string, int& n_out_len)
get_reco_uids	trenduser_rpm_work_interface.h	/^		int get_reco_uids(const char* uid_str, uint32_t num, int type, int zip, const int64_t req_id,$/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(const char* uid_str, uint32_t num, int type, int zip, const int64_t req_id, char* p_out_string, int& n_out_len)
get_reco_uids	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::get_reco_uids(const char* uid_str, uint32_t num, int type, int zip,$/;"	f	class:UserRecomWorkInterface	signature:(const char* uid_str, uint32_t num, int type, int zip, char* p_out_string, int& n_out_len)
get_reco_uids	userrecom_work_interface.h	/^		int get_reco_uids(const char* uid_str, uint32_t num, int type, int zip, $/;"	p	class:UserRecomWorkInterface	access:private	signature:(const char* uid_str, uint32_t num, int type, int zip, char* p_out_string, int& n_out_len)
get_recom_data	p2p_work_interface.cpp	/^int P2PWorkInterface::get_recom_data(const uint64_t uid, const bool need_relation, $/;"	f	class:P2PWorkInterface	signature:(const uint64_t uid, const bool need_relation, const __gnu_cxx::hash_set<uint64_t> filter_set, vector<RecoInfo>& result_vec)
get_recom_data	p2p_work_interface.h	/^		int get_recom_data(const uint64_t uid, const bool need_relation, $/;"	p	class:P2PWorkInterface	access:private	signature:(const uint64_t uid, const bool need_relation, const __gnu_cxx::hash_set<uint64_t> filter_set, vector<RecoInfo>& result_vec)
get_recom_uids	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::get_recom_uids(const char* uid_str, char*& p_out_string, int& n_out_len){$/;"	f	class:RecentlyGZWorkInterface	signature:(const char* uid_str, char*& p_out_string, int& n_out_len)
get_recom_uids	recentlygz_work_interface.h	/^		int get_recom_uids(const char* uid_str, char*& p_out_string, int& n_out_len);$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const char* uid_str, char*& p_out_string, int& n_out_len)
get_status	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::get_status(const char* db_name, uint64_t ad_id, $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, uint64_t ad_id, char* &p_out_string, int& n_out_len, int64_t req_id)
get_status	ad_index_work_interface.h	/^		int get_status(const char* db_name, uint64_t ad_id, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, uint64_t ad_id, char* &p_out_string, int& n_out_len, int64_t req_id)
get_targeting_uids	targeting_work_interface.cpp	/^int TargetingWorkInterface::get_targeting_uids(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& reco_uids, $/;"	f	class:TargetingWorkInterface	signature:(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& reco_uids, uint64_t group_uids[], uint16_t group_uid_num, uint32_t max, uint16_t num, char*& p_out_string, int& n_out_len)
get_targeting_uids	targeting_work_interface.h	/^		int get_targeting_uids(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& reco_uids, $/;"	p	class:TargetingWorkInterface	access:private	signature:(const char* uid_str, __gnu_cxx::hash_set<uint64_t>& reco_uids, uint64_t group_uids[], uint16_t group_uid_num, uint32_t max, uint16_t num, char*& p_out_string, int& n_out_len)
get_test_so_uids	test_so_work_interface.cpp	/^int TestSoWorkInterface::get_test_so_uids(const char* uid_str, int num, int type, $/;"	f	class:TestSoWorkInterface	signature:(const char* uid_str, int num, int type, const std::map<uint64_t, uint64_t>& reco_ids, char*& p_out_string, int& n_out_len)
get_test_so_uids	test_so_work_interface.h	/^		int get_test_so_uids(const char* uid_str, int num, int type, $/;"	p	class:TestSoWorkInterface	access:private	signature:(const char* uid_str, int num, int type, const std::map<uint64_t, uint64_t>& reco_ids, char*& p_out_string, int& n_out_len)
get_user_feature	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::get_user_feature(uint64_t& return_value, uint64_t uid, uint64_t item_key){$/;"	f	class:TrendUserRPMWorkInterface	signature:(uint64_t& return_value, uint64_t uid, uint64_t item_key)
get_user_feature	trenduser_rpm_work_interface.h	/^		int get_user_feature(uint64_t& return_value, uint64_t uid, uint64_t item_key);$/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(uint64_t& return_value, uint64_t uid, uint64_t item_key)
get_user_feature	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::get_user_feature(uint64_t& return_value, uint64_t uid, uint64_t item_key){$/;"	f	class:UserRecomWorkInterface	signature:(uint64_t& return_value, uint64_t uid, uint64_t item_key)
get_user_feature	userrecom_work_interface.h	/^		int get_user_feature(uint64_t& return_value, uint64_t uid, uint64_t item_key);$/;"	p	class:UserRecomWorkInterface	access:private	signature:(uint64_t& return_value, uint64_t uid, uint64_t item_key)
get_user_mfeature	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::get_user_mfeature(std::map<uint64_t, uint64_t>& map_return_value,$/;"	f	class:TrendUserRPMWorkInterface	signature:(std::map<uint64_t, uint64_t>& map_return_value, uint64_t uid, const std::vector<uint64_t>& vec_item_key)
get_user_mfeature	trenduser_rpm_work_interface.h	/^		int get_user_mfeature(std::map<uint64_t, uint64_t>& map_return_value,$/;"	p	class:TrendUserRPMWorkInterface	access:private	signature:(std::map<uint64_t, uint64_t>& map_return_value, uint64_t uid, const std::vector<uint64_t>& vec_item_key)
get_user_mfeature	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::get_user_mfeature(std::map<uint64_t, uint64_t>& map_return_value,$/;"	f	class:UserRecomWorkInterface	signature:(std::map<uint64_t, uint64_t>& map_return_value, uint64_t uid, const std::vector<uint64_t>& vec_item_key)
get_user_mfeature	userrecom_work_interface.h	/^		int get_user_mfeature(std::map<uint64_t, uint64_t>& map_return_value,$/;"	p	class:UserRecomWorkInterface	access:private	signature:(std::map<uint64_t, uint64_t>& map_return_value, uint64_t uid, const std::vector<uint64_t>& vec_item_key)
get_v_type	p2p_work_interface.cpp	/^int P2PWorkInterface::get_v_type(const uint64_t uid){	$/;"	f	class:P2PWorkInterface	signature:(const uint64_t uid)
get_v_type	p2p_work_interface.h	/^		int get_v_type(const uint64_t uid);$/;"	p	class:P2PWorkInterface	access:private	signature:(const uint64_t uid)
get_v_type	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::get_v_type(const uint64_t uid, uint32_t& type){	$/;"	f	class:RecentlyGZWorkInterface	signature:(const uint64_t uid, uint32_t& type)
get_v_type	recentlygz_work_interface.h	/^		int get_v_type(const uint64_t uid, uint32_t& type);	$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const uint64_t uid, uint32_t& type)
get_yellowV_data	p2p_work_interface.cpp	/^int P2PWorkInterface::get_yellowV_data(const char*& str_input, const char sep_char, $/;"	f	class:P2PWorkInterface	signature:(const char*& str_input, const char sep_char, const char second_sep_char, vector<PAIR_INT_FLOAT>& vec_ids)
get_yellowV_data	p2p_work_interface.h	/^		int get_yellowV_data(const char*& str_input, const char sep_char,$/;"	p	class:P2PWorkInterface	access:private	signature:(const char*& str_input, const char sep_char, const char second_sep_char, vector<PAIR_INT_FLOAT>& vec_ids)
hashset_to_vector	intersection_work_interface.cpp	/^void IntersectionWorkInterface::hashset_to_vector(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	f	class:IntersectionWorkInterface	signature:(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, vector<uint64_t>& vec_follows)
hashset_to_vector	intersection_work_interface.h	/^		void hashset_to_vector(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, vector<uint64_t>& vec_follows)
htonll	user_follow_proxy_work_interface.cpp	/^unsigned long long htonll(unsigned long long val){$/;"	f	signature:(unsigned long long val)
info	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::info(const char* db_name, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, char* &p_out_string, int& n_out_len, int64_t req_id)
info	ad_index_work_interface.h	/^		int info(const char* db_name, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, char* &p_out_string, int& n_out_len, int64_t req_id)
intersection_uids	intersection_work_interface.cpp	/^int IntersectionWorkInterface::intersection_uids(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, $/;"	f	class:IntersectionWorkInterface	signature:(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, const char* db_name, vector<uint64_t>& vec_intersection)
intersection_uids	intersection_work_interface.h	/^		int intersection_uids(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, const char* db_name, $/;"	p	class:IntersectionWorkInterface	access:private	signature:(const __gnu_cxx::hash_set<uint64_t>& hashset_follow_uids, const char* db_name, vector<uint64_t>& vec_intersection)
max_b_num	trenduser_rpm_work_interface.h	/^	static const uint32_t max_b_num = 2;$/;"	m	class:TrendUserRPMWorkInterface	access:public
max_b_num	userrecom_work_interface.h	/^	static const uint32_t max_b_num = 2;	\/\/ 限制桥梁数目$/;"	m	class:UserRecomWorkInterface	access:public
mget_follow_uids	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::mget_follow_uids(const uint64_t uids[], const uint32_t get_uid_num, $/;"	f	class:RecentlyGZWorkInterface	signature:(const uint64_t uids[], const uint32_t get_uid_num, MapMResult& map_m_fof_result, char& split_char, char& second_split_char)
mget_follow_uids	recentlygz_work_interface.h	/^		int mget_follow_uids(const uint64_t uids[], const uint32_t get_uid_num, MapMResult& map_m_fof_result,$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const uint64_t uids[], const uint32_t get_uid_num, MapMResult& map_m_fof_result, char& split_char, char& second_split_char)
mget_follow_uids	targeting_work_interface.cpp	/^int TargetingWorkInterface::mget_follow_uids(uint64_t mget_uids[], uint32_t get_uid_num, MapMResult& map_m_fof_result,$/;"	f	class:TargetingWorkInterface	signature:(uint64_t mget_uids[], uint32_t get_uid_num, MapMResult& map_m_fof_result, char& split_char, char& second_split_char)
mget_follow_uids	targeting_work_interface.h	/^		int mget_follow_uids(uint64_t mget_uids[], uint32_t get_uid_num, MapMResult& map_m_fof_result,$/;"	p	class:TargetingWorkInterface	access:private	signature:(uint64_t mget_uids[], uint32_t get_uid_num, MapMResult& map_m_fof_result, char& split_char, char& second_split_char)
ntohll	user_follow_proxy_work_interface.cpp	/^unsigned long long ntohll(unsigned long long val){$/;"	f	signature:(unsigned long long val)
num_	recentlygz_work_interface.h	/^			uint16_t num_;                      \/\/ 桥梁数量$/;"	m	struct:RecentlyGZWorkInterface::BridgeStr	access:public
p2p_recom	p2p_work_interface.cpp	/^int P2PWorkInterface::p2p_recom(const char* uid_str, const char* tuid_str, const int num,$/;"	f	class:P2PWorkInterface	signature:(const char* uid_str, const char* tuid_str, const int num, const bool need_relation, char*& p_out_string, int& n_out_len)
p2p_recom	p2p_work_interface.h	/^		int p2p_recom(const char* uid_str, const char* tuid_str, const int num,$/;"	p	class:P2PWorkInterface	access:private	signature:(const char* uid_str, const char* tuid_str, const int num, const bool need_relation, char*& p_out_string, int& n_out_len)
reco_id	p2p_work_interface.h	/^	uint64_t reco_id;		\/\/ 推荐结果id$/;"	m	struct:RecoInfo	access:public
reco_id_	recentlygz_work_interface.h	/^			uint64_t reco_id_;									\/\/ 推荐用户id$/;"	m	struct:RecentlyGZWorkInterface::RecomInfo	access:public
recomInfo_to_str	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::recomInfo_to_str(const RecomInfo& info, char*& out_str){$/;"	f	class:RecentlyGZWorkInterface	signature:(const RecomInfo& info, char*& out_str)
recomInfo_to_str	recentlygz_work_interface.h	/^		int recomInfo_to_str(const RecomInfo& info, char*& tmp_str);$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const RecomInfo& info, char*& tmp_str)
recom_intersection	p2p_work_interface.cpp	/^int P2PWorkInterface::recom_intersection(const int source, const bool rel_relation, $/;"	f	class:P2PWorkInterface	signature:(const int source, const bool rel_relation, const __gnu_cxx::hash_set<uint64_t>& filter_set, const map<uint64_t, int>& rel_map, const vector<PAIR_INT_FLOAT>& uid_sco_vec, vector<RecoInfo>& inter_vec)
recom_intersection	p2p_work_interface.h	/^		int recom_intersection(const int source, const bool rel_sorted, $/;"	p	class:P2PWorkInterface	access:private	signature:(const int source, const bool rel_sorted, const __gnu_cxx::hash_set<uint64_t>& filter_set, const map<uint64_t, int>& rel_map, const vector<PAIR_INT_FLOAT>& uid_sco_vec, vector<RecoInfo>& inter_vec)
relation	p2p_work_interface.h	/^	int relation;			\/\/ 推荐结果与被访问者关系$/;"	m	struct:RecoInfo	access:public
release_hashmap_gz_result	recentlygz_work_interface.h	/^		void release_hashmap_gz_result(HashMapGZResult& hashmap_gz_result){$/;"	f	class:RecentlyGZWorkInterface	access:private	signature:(HashMapGZResult& hashmap_gz_result)
release_map_vec_uid	targeting_work_interface.cpp	/^void TargetingWorkInterface::release_map_vec_uid(MAP_VEC_UID& map_vec_uid){$/;"	f	class:TargetingWorkInterface	signature:(MAP_VEC_UID& map_vec_uid)
release_map_vec_uid	targeting_work_interface.h	/^	void release_map_vec_uid(MAP_VEC_UID& map_vec_uid);$/;"	p	class:TargetingWorkInterface	access:public	signature:(MAP_VEC_UID& map_vec_uid)
score	p2p_work_interface.h	/^	float score;			\/\/ 推荐结果得分$/;"	m	struct:RecoInfo	access:public
set	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::set(const char* db_name, json_object *req_json, char* &p_out_string, $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
set	ad_index_work_interface.h	/^		int set(const char* db_name, json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
set_block_cache	block_cache_work_interface.cpp	/^int BlockCacheWorkInterface::set_block_cache(const char* uid_str, char* &p_result){$/;"	f	class:BlockCacheWorkInterface	signature:(const char* uid_str, char* &p_result)
set_block_cache	block_cache_work_interface.h	/^		int set_block_cache(const char* uid_str, char* &p_result);$/;"	p	class:BlockCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_result)
set_filter_cache	filter_cache_work_interface.cpp	/^int FilterCacheWorkInterface::set_filter_cache(const char* uid_str, char* &p_result){$/;"	f	class:FilterCacheWorkInterface	signature:(const char* uid_str, char* &p_result)
set_filter_cache	filter_cache_work_interface.h	/^		int set_filter_cache(const char* uid_str, char* &p_result);$/;"	p	class:FilterCacheWorkInterface	access:private	signature:(const char* uid_str, char* &p_result)
set_status	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::set_status(const char* db_name, uint64_t ad_id, int ad_status, $/;"	f	class:AdIndexWorkInterface	signature:(const char* db_name, uint64_t ad_id, int ad_status, char* &p_out_string, int& n_out_len, int64_t req_id)
set_status	ad_index_work_interface.h	/^		int set_status(const char* db_name, uint64_t ad_id, int status, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:private	signature:(const char* db_name, uint64_t ad_id, int status, char* &p_out_string, int& n_out_len, int64_t req_id)
source	p2p_work_interface.h	/^	int source;				\/\/ 数据来源$/;"	m	struct:RecoInfo	access:public
split_string_ids	targeting_work_interface.cpp	/^void TargetingWorkInterface::split_string_ids(uint64_t ids[], uint32_t& id_num, $/;"	f	class:TargetingWorkInterface	signature:(uint64_t ids[], uint32_t& id_num, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, const char* str_input, char sep_char, uint32_t limit)
split_string_ids	targeting_work_interface.h	/^		void split_string_ids(uint64_t ids[], uint32_t& id_num, $/;"	p	class:TargetingWorkInterface	access:private	signature:(uint64_t ids[], uint32_t& id_num, __gnu_cxx::hash_set<uint64_t>& hashset_reco_uids, const char* str_input, char sep_char, uint32_t limit = MAX_LIMIT)
split_string_ids_in_set	targeting_work_interface.cpp	/^void TargetingWorkInterface::split_string_ids_in_set(MAP_VEC_UID& map_vec_uid, uint64_t rel_uid, $/;"	f	class:TargetingWorkInterface	signature:(MAP_VEC_UID& map_vec_uid, uint64_t rel_uid, const char* str_input, char sep_char, uint32_t limit)
split_string_ids_in_set	targeting_work_interface.h	/^		void split_string_ids_in_set(MAP_VEC_UID& map_vec_uid, uint64_t rel_uid, const char* str_input, $/;"	p	class:TargetingWorkInterface	access:private	signature:(MAP_VEC_UID& map_vec_uid, uint64_t rel_uid, const char* str_input, char sep_char, uint32_t limit = MAX_LIMIT)
split_string_to_array	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::split_string_to_array(const char* str_input, const char& sep, $/;"	f	class:RecentlyGZWorkInterface	signature:(const char* str_input, const char& sep, char str_out[][MAX_GZ_LENGTH])
split_string_to_array	recentlygz_work_interface.h	/^		int split_string_to_array(const char* str_input, const char& sep, char str_out[][MAX_GZ_LENGTH]);$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const char* str_input, const char& sep, char str_out[][MAX_GZ_LENGTH])
time_	recentlygz_work_interface.h	/^			uint64_t time_;						\/\/ 桥梁加关注的时间，保存最近的时间$/;"	m	struct:RecentlyGZWorkInterface::BridgeStr	access:public
user_type	p2p_work_interface.h	/^	int user_type;			\/\/ 用户V类型$/;"	m	struct:RecoInfo	access:public
vector_to_str	intersection_work_interface.cpp	/^int IntersectionWorkInterface::vector_to_str(const vector<uint64_t>& vec, const int type, char*& out_str){$/;"	f	class:IntersectionWorkInterface	signature:(const vector<uint64_t>& vec, const int type, char*& out_str)
vector_to_str	intersection_work_interface.h	/^		int vector_to_str(const vector<uint64_t>& vec, const int type, char*& out_str);$/;"	p	class:IntersectionWorkInterface	access:private	signature:(const vector<uint64_t>& vec, const int type, char*& out_str)
vector_to_str	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::vector_to_str(const vector<uint64_t>& vec, char*& out_str){$/;"	f	class:RecentlyGZWorkInterface	signature:(const vector<uint64_t>& vec, char*& out_str)
vector_to_str	recentlygz_work_interface.h	/^		int vector_to_str(const vector<uint64_t>& vec, char*& out_str);$/;"	p	class:RecentlyGZWorkInterface	access:private	signature:(const vector<uint64_t>& vec, char*& out_str)
vtype_	recentlygz_work_interface.h	/^			uint32_t vtype_;									\/\/ 推荐用户类型$/;"	m	struct:RecentlyGZWorkInterface::RecomInfo	access:public
work_core	ad_index_work_interface.cpp	/^int AdIndexWorkInterface::work_core(json_object *req_json, char* &p_out_string, $/;"	f	class:AdIndexWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	ad_index_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:AdIndexWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	block_cache_work_interface.cpp	/^int BlockCacheWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:BlockCacheWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	block_cache_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:BlockCacheWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	example_work_interface.cpp	/^int ExampleWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:ExampleWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	example_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:ExampleWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	filter_cache_work_interface.cpp	/^int FilterCacheWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:FilterCacheWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	filter_cache_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:FilterCacheWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	filter_user_work_interface.cpp	/^int FilterUserWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:FilterUserWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	filter_user_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:FilterUserWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	intersection_work_interface.cpp	/^int IntersectionWorkInterface::work_core(json_object *req_json, char* &p_out_string, $/;"	f	class:IntersectionWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	intersection_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:IntersectionWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	node_userrecom_work_interface.cpp	/^int NodeUserRecomWorkInterface::work_core(json_object *req_json, char* &p_out_string, $/;"	f	class:NodeUserRecomWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	node_userrecom_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:NodeUserRecomWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	p2p_work_interface.cpp	/^int P2PWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:P2PWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	p2p_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:P2PWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	para_userrecom_work_interface.cpp	/^int ParaUserRecomWorkInterface::work_core(json_object *req_json, char* &p_out_string, $/;"	f	class:ParaUserRecomWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	para_userrecom_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:ParaUserRecomWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	recentlygz_work_interface.cpp	/^int RecentlyGZWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:RecentlyGZWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	recentlygz_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:RecentlyGZWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	rpmmodel_work_interface.cpp	/^int RpmModelWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:RpmModelWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	rpmmodel_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:RpmModelWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	targeting_work_interface.cpp	/^int TargetingWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:TargetingWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	targeting_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:TargetingWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	test_so_work_interface.cpp	/^int TestSoWorkInterface::work_core(json_object *req_json, char* &p_out_string, $/;"	f	class:TestSoWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	test_so_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:TestSoWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	trenduser_rpm_work_interface.cpp	/^int TrendUserRPMWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:TrendUserRPMWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	trenduser_rpm_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:TrendUserRPMWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	user_follow_proxy_work_interface.cpp	/^int UserFollowProxyWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:UserFollowProxyWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	user_follow_proxy_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:UserFollowProxyWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	userrecom_work_interface.cpp	/^int UserRecomWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:UserRecomWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	userrecom_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:UserRecomWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	ver_work_interface.cpp	/^int VerWorkInterface::work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id){$/;"	f	class:VerWorkInterface	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
work_core	ver_work_interface.h	/^		int work_core(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id);$/;"	p	class:VerWorkInterface	access:public	signature:(json_object *req_json, char* &p_out_string, int& n_out_len, int64_t req_id)
~AdIndexWorkInterface	ad_index_work_interface.h	/^		~AdIndexWorkInterface(){$/;"	f	class:AdIndexWorkInterface	access:public	signature:()
~BlockCacheWorkInterface	block_cache_work_interface.h	/^		~BlockCacheWorkInterface(){$/;"	f	class:BlockCacheWorkInterface	access:public	signature:()
~ExampleWorkInterface	example_work_interface.h	/^		~ExampleWorkInterface(){$/;"	f	class:ExampleWorkInterface	access:public	signature:()
~FilterCacheWorkInterface	filter_cache_work_interface.h	/^		~FilterCacheWorkInterface(){$/;"	f	class:FilterCacheWorkInterface	access:public	signature:()
~FilterUserWorkInterface	filter_user_work_interface.h	/^		~FilterUserWorkInterface(){$/;"	f	class:FilterUserWorkInterface	access:public	signature:()
~IntersectionWorkInterface	intersection_work_interface.h	/^		~IntersectionWorkInterface(){$/;"	f	class:IntersectionWorkInterface	access:public	signature:()
~NodeUserRecomWorkInterface	node_userrecom_work_interface.h	/^		~NodeUserRecomWorkInterface(){$/;"	f	class:NodeUserRecomWorkInterface	access:public	signature:()
~P2PWorkInterface	p2p_work_interface.h	/^		~P2PWorkInterface(){$/;"	f	class:P2PWorkInterface	access:public	signature:()
~ParaUserRecomWorkInterface	para_userrecom_work_interface.h	/^		~ParaUserRecomWorkInterface(){$/;"	f	class:ParaUserRecomWorkInterface	access:public	signature:()
~RecentlyGZWorkInterface	recentlygz_work_interface.h	/^		~RecentlyGZWorkInterface(){$/;"	f	class:RecentlyGZWorkInterface	access:public	signature:()
~RpmModelWorkInterface	rpmmodel_work_interface.h	/^		~RpmModelWorkInterface(){$/;"	f	class:RpmModelWorkInterface	access:public	signature:()
~TargetingWorkInterface	targeting_work_interface.h	/^		~TargetingWorkInterface(){$/;"	f	class:TargetingWorkInterface	access:public	signature:()
~TestSoWorkInterface	test_so_work_interface.h	/^		~TestSoWorkInterface(){$/;"	f	class:TestSoWorkInterface	access:public	signature:()
~TrendUserRPMWorkInterface	trenduser_rpm_work_interface.h	/^		~TrendUserRPMWorkInterface(){$/;"	f	class:TrendUserRPMWorkInterface	access:public	signature:()
~UserFollowProxyWorkInterface	user_follow_proxy_work_interface.h	/^		~UserFollowProxyWorkInterface(){$/;"	f	class:UserFollowProxyWorkInterface	access:public	signature:()
~UserRecomWorkInterface	userrecom_work_interface.h	/^		~UserRecomWorkInterface(){$/;"	f	class:UserRecomWorkInterface	access:public	signature:()
~VerWorkInterface	ver_work_interface.h	/^		~VerWorkInterface(){$/;"	f	class:VerWorkInterface	access:public	signature:()
